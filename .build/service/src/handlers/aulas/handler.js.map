{"version":3,"file":"src/handlers/aulas/handler.js","mappings":"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","sources":["webpack://api-tindin-base/./lib/auth.ts","webpack://api-tindin-base/./lib/database.ts","webpack://api-tindin-base/./lib/error.ts","webpack://api-tindin-base/./lib/hash.ts","webpack://api-tindin-base/./lib/i18n.ts","webpack://api-tindin-base/./lib/jwt.ts","webpack://api-tindin-base/./lib/mongooseErrorValidator.ts","webpack://api-tindin-base/./lib/router.ts","webpack://api-tindin-base/./src/config.ts","webpack://api-tindin-base/./src/handlers/aulas/aulaService.ts","webpack://api-tindin-base/./src/handlers/aulas/createAula.ts","webpack://api-tindin-base/./src/handlers/aulas/deleteAula.ts","webpack://api-tindin-base/./src/handlers/aulas/getAula.ts","webpack://api-tindin-base/./src/handlers/aulas/listAulas.ts","webpack://api-tindin-base/./src/handlers/aulas/saveProgress.ts","webpack://api-tindin-base/./src/handlers/aulas/updateAula.ts","webpack://api-tindin-base/./src/handlers/user/userErrors.ts","webpack://api-tindin-base/./src/handlers/user/userService.ts","webpack://api-tindin-base/./src/models/aulaModel.ts","webpack://api-tindin-base/./src/models/userModel.ts","webpack://api-tindin-base/./src/types/ErrorTypesEnum.ts","webpack://api-tindin-base/./src/types/TableEnum.ts","webpack://api-tindin-base/external commonjs \"crypto\"","webpack://api-tindin-base/external commonjs \"dotenv\"","webpack://api-tindin-base/external commonjs \"jsonwebtoken\"","webpack://api-tindin-base/external commonjs \"lambda-router\"","webpack://api-tindin-base/external commonjs \"mongoose\"","webpack://api-tindin-base/external commonjs \"nanoid\"","webpack://api-tindin-base/external commonjs \"validator\"","webpack://api-tindin-base/webpack/bootstrap","webpack://api-tindin-base/./src/handlers/aulas/handler.ts"],"sourcesContent":["import { userService } from '@/handlers/user/userService'\r\nimport { error } from './error'\r\nimport { jwt } from './jwt'\r\n\r\nconst TOKEN_HEADER_KEY = 'x-api-key'\r\n\r\nconst parseUserPayload = (event) => {\r\n  const token = event.headers[TOKEN_HEADER_KEY]\r\n  const user = jwt.verify(token) as any\r\n  if (!user) {\r\n    throw error.buildNotAuthorizedError()\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nconst authUser = async (event) => {\r\n  const payload = parseUserPayload(event)\r\n  const user = await userService.findById(payload.user_id)\r\n\r\n  return user\r\n}\r\n\r\nconst authToken = async (event) => {\r\n  const payload = parseUserPayload(event)\r\n  const user = await userService.findById(payload.user_id)\r\n\r\n  return user\r\n}\r\n\r\nconst verifyContext = async (event) => {\r\n  const user = await authUser(event)\r\n  event.user = user\r\n}\r\n\r\nconst verifyLogged = (handler) => async (event, ...rest) => {\r\n  const user = await authToken(event)\r\n  event.user = user\r\n\r\n  return handler(event, ...rest)\r\n}\r\n\r\nconst auth = {\r\n  verifyLogged,\r\n  verifyContext,\r\n  parseUserPayload,\r\n  TOKEN_HEADER_KEY\r\n}\r\n\r\nexport {\r\n  auth\r\n}\r\n","\r\nimport { config } from '@/config'\r\nimport * as mongoose from 'mongoose'\r\n\r\nlet conn: any = null\r\n\r\nconst connect = async (connectOptions?: mongoose.ConnectOptions) => {\r\n  const mongoConfig: mongoose.ConnectOptions = {\r\n    ignoreUndefined: true,\r\n    autoIndex: false,\r\n    autoCreate: false,\r\n    maxPoolSize: 1,\r\n    ...connectOptions\r\n  }\r\n\r\n  await mongoose.set('strictQuery', true)\r\n\r\n  if (!config.IS_TEST && !conn) {\r\n    conn = await mongoose.connect(config.DATABASE_URL, mongoConfig)\r\n  }\r\n\r\n  return conn\r\n}\r\n\r\nconst disconnect = async () => {\r\n  if (!config.IS_LOCAL && !config.IS_TEST) {\r\n    await mongoose.disconnect()\r\n  }\r\n}\r\n\r\nconst disconnectWith = async (connect: any) => {\r\n  if (!config.IS_LOCAL && !config.IS_TEST) {\r\n    await connect.connection.close()\r\n    conn = null\r\n  }\r\n}\r\n\r\nexport {\r\n  connect,\r\n  disconnect,\r\n  disconnectWith\r\n}\r\n","import { ErrorTypesEnum } from '@/types/ErrorTypesEnum'\r\nimport { i18n } from './i18n'\r\nimport { MESSAGES } from './i18n/error_messages.json'\r\n\r\nconst build = (options, params?) => {\r\n  const error = new Error()\r\n\r\n  return {\r\n    ...error,\r\n    message: options.message,\r\n    // stack: error.stack,\r\n    type: options.type,\r\n    statusCode: options.statusCode,\r\n    params\r\n  }\r\n}\r\n\r\nconst buildSchemaValidationError = originalError => {\r\n  if (originalError.errors) {\r\n    const keyErrors = Object.keys(originalError.errors)\r\n    const errorMessages = keyErrors.map(keyError => originalError.errors[keyError])\r\n    const finalMessage = errorMessages.map(fildName => i18n.get(MESSAGES.SCHEMA_VALIDATION_ERROR, {\r\n      fieldName: fildName.message\r\n    }))\r\n\r\n    originalError.message = finalMessage\r\n  }\r\n\r\n  originalError.type = ErrorTypesEnum.INVALID_SCHEMA\r\n  originalError.statusCode = 422\r\n  return originalError\r\n}\r\n\r\nconst buildInvalidUpdateInputError = originalError => {\r\n  if (originalError.errors) {\r\n    const keyErrors = Object.keys(originalError.errors)\r\n    const errorMessages = keyErrors.map(keyError => originalError.errors[keyError])\r\n    const finalMessage = errorMessages.map(fildName => i18n.get(MESSAGES.UPDATE_VALIDATION_ERROR, {\r\n      fieldName: fildName.path,\r\n      value: fildName.value\r\n    }))\r\n\r\n    originalError.message = finalMessage\r\n  }\r\n\r\n  originalError.type = ErrorTypesEnum.INVALID_UPDATE_INPUT\r\n  originalError.statusCode = 422\r\n  return originalError\r\n}\r\n\r\nconst buildNotAuthorizedError = (msg = i18n.get(MESSAGES.NOT_AUTHORIZED_ERROR)) => {\r\n  const error = new Error()\r\n  return {\r\n    ...error,\r\n    message: msg,\r\n    stack: error.stack,\r\n    type: ErrorTypesEnum.NOT_AUTHORIZED,\r\n    statusCode: 401\r\n  }\r\n}\r\n\r\nconst buildDependencyFailedError = (msg = i18n.get(MESSAGES.DEPENDENCY_FAILED)) => {\r\n  const error = new Error()\r\n  return {\r\n    ...error,\r\n    message: msg,\r\n    stack: error.stack,\r\n    type: ErrorTypesEnum.DEPENDENCY_FAILED,\r\n    statusCode: 424\r\n  }\r\n}\r\n\r\nconst buildUserNotSessionOwner = () => error.build({\r\n  message: i18n.get(MESSAGES.USER_NOT_SESSION_OWNER),\r\n  statusCode: 412,\r\n  type: ErrorTypesEnum.USER_NOT_SESSION_OWNER\r\n})\r\n\r\nconst buildSomethingWentWrongInGameError = () => error.build({\r\n  message: i18n.get(MESSAGES.SOMETHING_WENT_WRONG_IN_GAME),\r\n  statusCode: 412,\r\n  type: ErrorTypesEnum.SOMETHING_WENT_WRONG_IN_GAME\r\n})\r\n\r\nconst buildNotImplemented = () => error.build({\r\n  message: i18n.get(MESSAGES.NOT_IMPLEMENTED),\r\n  statusCode: 412,\r\n  type: ErrorTypesEnum.NOT_IMPLEMENTED\r\n})\r\n\r\nconst buildUserNotHasPartner = () => error.build({\r\n  message: i18n.get(MESSAGES.NOT_HAS_PARTNER),\r\n  statusCode: 412,\r\n  type: ErrorTypesEnum.NOT_AUTHORIZED\r\n})\r\n\r\nconst error = {\r\n  build,\r\n  buildSchemaValidationError,\r\n  buildInvalidUpdateInputError,\r\n  buildNotAuthorizedError,\r\n  buildDependencyFailedError,\r\n  buildUserNotSessionOwner,\r\n  buildSomethingWentWrongInGameError,\r\n  buildNotImplemented,\r\n  buildUserNotHasPartner\r\n}\r\n\r\nexport {\r\n  error\r\n}\r\n","import { createHash, randomBytes } from 'crypto'\r\n\r\nconst encode = (content: string = '', algorithm = 'sha1') =>\r\n  createHash(algorithm).update(content).digest('hex')\r\n\r\nconst randomHash = (bytes = 4) => {\r\n  return randomBytes(bytes).toString('hex')\r\n}\r\nconst randomPassword = () => {\r\n  return randomBytes(20).toString('hex')\r\n}\r\n\r\nconst hash = {\r\n  encode,\r\n  randomHash,\r\n  randomPassword\r\n}\r\n\r\nexport {\r\n  hash\r\n}\r\n","\r\nconst addMessage = (message, response, body) => {\r\n  return {\r\n    ...response,\r\n    body: JSON.stringify({\r\n      ...body,\r\n      message\r\n    })\r\n  }\r\n}\r\n\r\nconst parseTemplates = (message: string, params) => {\r\n  if (!params) {\r\n    return message\r\n  }\r\n\r\n  const keys = Object.keys(params)\r\n\r\n  let text = message\r\n\r\n  for (const key of keys) {\r\n    const search = `{${key}}`\r\n    text = text.replace(new RegExp(search, 'g'), params[key])\r\n  }\r\n  return text\r\n}\r\n\r\nconst resolve = ({ language, response }) => {\r\n  try {\r\n    const parsedBody = JSON.parse(response?.body)\r\n    const { message } = parsedBody\r\n\r\n    if (Array.isArray(message)) {\r\n      if (language === 'en') {\r\n        const templates = message.map(parse => parseTemplates(parse?.en, parse.params))\r\n\r\n        const finalMessage = templates.join(', ')\r\n\r\n        return addMessage(\r\n          finalMessage,\r\n          response,\r\n          parsedBody\r\n        )\r\n      }\r\n\r\n      const templates = message.map(parse => parseTemplates(parse?.ptBr, parse.params))\r\n\r\n      const finalMessage = templates.join(', ')\r\n\r\n      return addMessage(\r\n        finalMessage,\r\n        response,\r\n        parsedBody\r\n      )\r\n    }\r\n\r\n    if (language === 'en' && message?.en) {\r\n      return addMessage(\r\n        parseTemplates(message?.en, message.params),\r\n        response,\r\n        parsedBody\r\n      )\r\n    }\r\n\r\n    if (message?.ptBr) {\r\n      return addMessage(\r\n        parseTemplates(message?.ptBr, message.params),\r\n        response,\r\n        parsedBody\r\n      )\r\n    }\r\n\r\n    return response\r\n  } catch (error) {\r\n    return response\r\n  }\r\n}\r\n\r\nconst get = (definition, params?) => {\r\n  return {\r\n    ...definition,\r\n    params\r\n  }\r\n}\r\n\r\nconst translator = (definition, language: string = 'ptBr', params?) => {\r\n  const languageSelected = definition[language] ? language : 'ptBr'\r\n  return parseTemplates(definition[languageSelected], (params || {}))\r\n}\r\n\r\nconst i18n = {\r\n  resolve,\r\n  get,\r\n  translator,\r\n  parseTemplates\r\n}\r\n\r\nexport {\r\n  i18n\r\n}\r\n","import { config } from '@/config'\r\nimport { sign, verify as verifyJwt } from 'jsonwebtoken'\r\n\r\nconst create = (data, options = {}) =>\r\n  sign(data, config.JWT_SECRET, options)\r\n\r\nconst verify = token => {\r\n  try {\r\n    const payload = verifyJwt(token, config.JWT_SECRET)\r\n    return payload\r\n  } catch (e) {\r\n    return null\r\n  }\r\n}\r\n\r\nconst getData = (token: string) => {\r\n  try {\r\n    const [,data] = token.split('.')\r\n    const rawData = Buffer.from(data, 'base64').toString()\r\n    return JSON.parse(rawData)\r\n  } catch (e) {\r\n    return null\r\n  }\r\n}\r\n\r\nconst jwt = {\r\n  create,\r\n  verify,\r\n  getData\r\n}\r\n\r\nexport {\r\n  jwt\r\n}\r\n","/* eslint-disable no-console */\r\nimport { error } from '@/lib/error'\r\nimport * as mongoose from 'mongoose'\r\n\r\nconst mongooseErrorValidator = (schema) => {\r\n  const changeToInvalidSchemaError = (err: mongoose.Error.ValidationError, _: any, next: (arg0?: any) => void) => {\r\n    if (err) {\r\n      return next(error.buildInvalidUpdateInputError(err))\r\n    }\r\n    return next()\r\n  }\r\n\r\n  const catchInvalidSchema = (err: mongoose.Error.ValidationError, _: any, next: (arg0?: any) => void) => {\r\n    if (err) {\r\n      return next(error.buildSchemaValidationError(err))\r\n    }\r\n    return next()\r\n  }\r\n\r\n  schema.post('validate', catchInvalidSchema)\r\n  schema.post('findOneAndUpdate', changeToInvalidSchemaError)\r\n}\r\n\r\nexport {\r\n  mongooseErrorValidator\r\n}\r\n","import { Router } from 'lambda-router'\r\nimport { ErrorTypesEnum } from '@/types/ErrorTypesEnum'\r\nimport { connect } from '@/lib/database'\r\nimport { APIGatewayProxyResult, Context } from 'aws-lambda'\r\nimport { auth } from './auth'\r\nimport { i18n } from './i18n'\r\n\r\nconst buildRouter = () => {\r\n  const router = Router({\r\n    parseBody: true,\r\n    decodeEvent: true,\r\n    includeErrorStack: true\r\n  })\r\n\r\n  router.unknown((_event, { response }, path, method) => {\r\n    return response(404, {\r\n      message: `${method} on ${path} not found`\r\n    })\r\n  })\r\n\r\n  router.beforeRoute(event => {\r\n    const { pathParameters = {}, queryStringParameters = {}, body } = event\r\n    event.params = pathParameters\r\n    event.query = queryStringParameters\r\n    event.body = body ?? {}\r\n  })\r\n\r\n  router.formatError((_statusCode, error) => {\r\n    if (!error.type) {\r\n      error.type = ErrorTypesEnum.UNKNOWN\r\n    }\r\n\r\n    return error\r\n  })\r\n\r\n  return router\r\n}\r\n\r\nconst connPromise = connect({ maxPoolSize: 1, minPoolSize: 0, maxIdleTimeMS: 1000 })\r\n\r\nconst buildHandler = (router, config?) =>\r\n  async (event, context: Context): Promise<APIGatewayProxyResult> => {\r\n    context = context || {}\r\n\r\n    await connPromise\r\n    context.callbackWaitsForEmptyEventLoop = false\r\n\r\n    if (config?.auth) {\r\n      router.beforeRoute(async event => {\r\n        await auth.verifyContext(event)\r\n      })\r\n    }\r\n\r\n    const result = await router.route(event, context)\r\n\r\n    const response = i18n.resolve({\r\n      language: event?.headers?.language,\r\n      response: result.response\r\n    })\r\n\r\n    return response\r\n  }\r\n\r\nexport {\r\n  buildRouter,\r\n  buildHandler\r\n}\r\n","import * as dotenv from 'dotenv'\r\n\r\ndotenv.config()\r\n\r\nconst config = {\r\n  DATABASE_URL: process.env.DATABASE_URL ?? '',\r\n  IS_PRODUCTION: process.env.NODE_ENV === 'production',\r\n  IS_TEST: process.env.NODE_ENV === 'test',\r\n  IS_LOCAL: process.env.NODE_ENV === 'development',\r\n  JWT_SECRET: process.env.JWT_SECRET ?? '5ce5ecba-608a-4561-932a-05e25b86f672'\r\n}\r\n\r\nexport { config }\r\n","import { saveProgressHandler } from './saveProgress';  // Importe o novo handler\r\nimport { auth } from '@/lib/auth';  // Importe o módulo de autenticação\r\nimport mongoose from 'mongoose';\r\nimport { buildRouter, buildHandler } from '@/lib/router';\r\nimport { createAulaHandler } from './createAula';\r\nimport { deleteAulaHandler } from './deleteAula';\r\nimport { getAulaHandler } from './getAula';\r\nimport { listAulasHandler } from './listAulas';\r\nimport { updateAulaHandler } from './updateAula';\r\n\r\nconst router = buildRouter();\r\n\r\nrouter.post('/aulas', auth.verifyLogged(createAulaHandler));\r\nrouter.get('/aulas/{aulaId}', auth.verifyLogged(getAulaHandler));\r\nrouter.put('/aulas', auth.verifyLogged(updateAulaHandler));\r\nrouter.get('/aulas', auth.verifyLogged(listAulasHandler));\r\nrouter.delete('/aulas/{aulaId}', auth.verifyLogged(deleteAulaHandler));\r\n\r\n// Adicione a nova rota para salvar progresso\r\nrouter.post('/aulas/{aulaId}/mine', auth.verifyLogged(saveProgressHandler));\r\n\r\nconst main = buildHandler(router);\r\n\r\nexport { main };\r\n\r\nimport { Aula } from '@/models/aulaModel';\r\nimport { ICreateAula, IUpdateAula } from '@/types/IAula';\r\n\r\nconst createAula = async (data: ICreateAula) => {\r\n  const novaAula = await Aula.create(data);\r\n  return novaAula;\r\n};\r\n\r\nconst deleteAula = async (aulaId: string) => {\r\n  const aulaExcluida = await Aula.findByIdAndDelete(aulaId);\r\n  return aulaExcluida;\r\n};\r\n\r\nconst getAula = async (aulaId: string) => {\r\n  const aula = await Aula.findById(aulaId);\r\n  return aula;\r\n};\r\n\r\nconst listAulas = async (filtro: { titulo?: string; descricao?: string; temVideo?: boolean } = {}) => {\r\n  const query: any = {};\r\n\r\n  if (filtro.titulo) {\r\n    query.titulo = { $regex: filtro.titulo, $options: 'i' };\r\n  }\r\n\r\n  if (filtro.descricao) {\r\n    query.descricao = { $regex: filtro.descricao, $options: 'i' };\r\n  }\r\n\r\n  if (filtro.temVideo !== undefined) {\r\n    query.urlVideo = { $exists: filtro.temVideo };\r\n  }\r\n\r\n  const aulas = await Aula.find(query);\r\n  return aulas;\r\n};\r\n\r\nconst updateAula = async (data: IUpdateAula) => {\r\n  const { aulaId, ...atualizacoes } = data;\r\n  const aulaAtualizada = await Aula.findByIdAndUpdate(\r\n    aulaId,\r\n    { $set: atualizacoes },\r\n    { new: true }\r\n  );\r\n  return aulaAtualizada;\r\n};\r\n\r\nconst saveProgress = async (userId: string, aulaId: string, progress: number, performance: number) => {\r\n  const aula = await Aula.findById(aulaId);\r\n\r\n  if (!aula) {\r\n    throw new Error('Aula não encontrada');\r\n  }\r\n\r\n  // Verifique se já existe um progresso para esse usuário\r\n  const progressoUsuario = aula.progressPorUsuario.find((progress) => progress.userId.toString() === userId);\r\n\r\n  if (progressoUsuario) {\r\n    // Atualize o progresso existente\r\n    progressoUsuario.progress = progress;\r\n    progressoUsuario.performance = performance;\r\n  } else {\r\n    // Crie um novo progresso para o usuário\r\n    aula.progressPorUsuario.push({ userId, progress, performance });\r\n  }\r\n\r\n  await aula.save();\r\n  return aula;\r\n};\r\n\r\nexport { createAula, deleteAula, getAula, listAulas, updateAula, saveProgress };\r\n\r\n","import { createAula } from './aulaService';\r\n\r\nconst createAulaHandler = async ({ body }) => {\r\n  try {\r\n    const aula = await createAula(body);\r\n    return { aula };\r\n  } catch (error) {\r\n    return { error: error.message };\r\n  }\r\n};\r\n\r\nexport { createAulaHandler };\r\n","import { deleteAula } from './aulaService';\r\n\r\nconst deleteAulaHandler = async ({ pathParameters }) => {\r\n  try {\r\n    const { aulaId } = pathParameters;\r\n    const aulaExcluida = await deleteAula(aulaId);\r\n    return { message: 'Aula excluída com sucesso' };\r\n  } catch (error) {\r\n    return { error: error.message };\r\n  }\r\n};\r\n\r\nexport { deleteAulaHandler };\r\n","import { getAula } from './aulaService';\r\n\r\nconst getAulaHandler = async ({ pathParameters }) => {\r\n  try {\r\n    const { aulaId } = pathParameters;\r\n    const aula = await getAula(aulaId);\r\n    return { aula };\r\n  } catch (error) {\r\n    return { error: error.message };\r\n  }\r\n};\r\n\r\nexport { getAulaHandler };\r\n","import { listAulas } from './aulaService';\r\n\r\nconst listAulasHandler = async ({ queryStringParameters }) => {\r\n  try {\r\n    const filtro = queryStringParameters || {};\r\n    const aulas = await listAulas(filtro);\r\n    return { aulas };\r\n  } catch (error) {\r\n    return { error: error.message };\r\n  }\r\n};\r\n\r\nexport { listAulasHandler };\r\n\r\n\r\n// import { listAulas } from './aulaService';\r\n\r\n// const listAulasHandler = async () => {\r\n//   try {\r\n//     const aulas = await listAulas();\r\n//     return { aulas };\r\n//   } catch (error) {\r\n//     return { error: error.message };\r\n//   }\r\n// };\r\n\r\n// export { listAulasHandler };\r\n","import { getAula, saveProgress } from './aulaService';\r\n\r\n\r\nconst saveProgressHandler = async ({ pathParameters, body, user }) => {\r\n  try {\r\n    const { aulaId } = pathParameters;\r\n    const { progress, performance } = body;\r\n\r\n    // Verifique se aulaId, progress e performance estão presentes\r\n    if (!aulaId || !progress || !performance) {\r\n      throw new Error('Parâmetros inválidos');\r\n    }\r\n\r\n    // Obtenha a aula atual\r\n    const aulaAtual = await getAula(aulaId);\r\n\r\n  // Verifique se a aula não é nula e se já está finalizada\r\n  if (aulaAtual !== null && aulaAtual.progressPorUsuario.some((progress) => progress.progress === 100)) {\r\n    throw new Error('Aula já finalizada, não é possível atualizar o progresso.');\r\n  }\r\n    // Atualize o progresso apenas se não estiver finalizada, passando o userId\r\n    const aula = await saveProgress(user._id, aulaId, progress, performance);\r\n    return { aula };\r\n  } catch (error) {\r\n    return { error: error.message };\r\n  }\r\n};\r\n\r\n\r\nexport { saveProgressHandler };","import { updateAula } from './aulaService';\r\n\r\nconst updateAulaHandler = async ({ body }) => {\r\n  try {\r\n    const aulaAtualizada = await updateAula(body);\r\n    return { aula: aulaAtualizada };\r\n  } catch (error) {\r\n    return { error: error.message };\r\n  }\r\n};\r\n\r\nexport { updateAulaHandler };\r\n","import { ErrorTypesEnum } from '@/types/ErrorTypesEnum'\r\nimport { error } from '@/lib/error'\r\n\r\nconst uniqueEmailError = email => {\r\n  return error.build({\r\n    message: `O email ${email} já existe`,\r\n    statusCode: 422,\r\n    type: ErrorTypesEnum.EMAIL_ALREADY_EXISTS\r\n  })\r\n}\r\n\r\nconst buildUserNotFoundError = user => {\r\n  return error.build({\r\n    message: `Usuário ${user} não encontrado!`,\r\n    statusCode: 412,\r\n    type: ErrorTypesEnum.USER_NOT_FOUND\r\n  })\r\n}\r\n\r\nconst buildEmailNotInformedError = () => {\r\n  return error.build({\r\n    message: 'O email não foi informado!',\r\n    statusCode: 422,\r\n    type: ErrorTypesEnum.EMAIL_NOT_INFORMED\r\n  })\r\n}\r\n\r\nconst buildWrongPasswordError = () => error.build({\r\n  message: 'Senha incorreta!',\r\n  statusCode: 412,\r\n  type: ErrorTypesEnum.WRONG_PASSWORD\r\n})\r\n\r\nconst buildPasswordNotInformedError = () => error.build({\r\n  message: 'Senha não informada!',\r\n  statusCode: 422,\r\n  type: ErrorTypesEnum.PASSWORD_NOT_INFORMED\r\n})\r\n\r\nconst userErrors = {\r\n  uniqueEmailError,\r\n  buildUserNotFoundError,\r\n  buildPasswordNotInformedError,\r\n  buildWrongPasswordError,\r\n  buildEmailNotInformedError\r\n}\r\n\r\nexport {\r\n  userErrors\r\n}\r\n","import { hash } from '@/lib/hash'\r\nimport { jwt } from '@/lib/jwt'\r\nimport { User } from '@/models/userModel'\r\nimport { IUser } from '@/types/IUser'\r\nimport { userErrors } from './userErrors'\r\nimport { customAlphabet } from 'nanoid'\r\n\r\nconst create = async (data: IUser) => {\r\n  const passHash = hash.encode(data.password)\r\n\r\n  const email = data?.email\r\n  if (await findByEmail(email)) {\r\n    throw userErrors.uniqueEmailError(email)\r\n  }\r\n\r\n  const user = await User.create({\r\n    ...data,\r\n    password: passHash\r\n  })\r\n\r\n  const userDb = user.toObject()\r\n\r\n  return userDb\r\n}\r\n\r\nconst findByEmail = async (email) => await User.findOne({\r\n  email: email\r\n})\r\n\r\nconst findById = async (userId: string) => {\r\n  const user = await User.findById(userId)\r\n\r\n  if (!user) {\r\n    throw userErrors.buildUserNotFoundError(userId)\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nconst createToken = async (userId: string) => jwt.create({ user_id: userId })\r\n\r\nconst userService = {\r\n  create,\r\n  findById,\r\n  createToken,\r\n  findByEmail,\r\n  customAlphabet\r\n}\r\n\r\nexport {\r\n  userService\r\n}\r\n","// aulaModel.ts\r\nimport { Schema, model } from 'mongoose';\r\n\r\nconst progressSchema = new Schema({\r\n  userId: {\r\n    type: Schema.Types.ObjectId,\r\n    ref: 'User', // Certifique-se de ajustar se o modelo de usuário tiver um nome diferente\r\n    required: true,\r\n  },\r\n  progress: {\r\n    type: Number,\r\n    default: 0,\r\n    min: 0,\r\n    max: 100,\r\n  },\r\n  performance: {\r\n    type: Number,\r\n    default: 0,\r\n    min: 0,\r\n    max: 100,\r\n  },\r\n});\r\n\r\nconst aulaSchema = new Schema({\r\n  titulo: {\r\n    type: String,\r\n    required: [true, 'Título é obrigatório'],\r\n  },\r\n  descricao: {\r\n    type: String,\r\n  },\r\n  urlCapa: {\r\n    type: String,\r\n    required: [true, 'URL da capa é obrigatória'],\r\n  },\r\n  urlVideo: {\r\n    type: String,\r\n    required: [true, 'URL do vídeo é obrigatória'],\r\n  },\r\n  urlArquivoComplementar: {\r\n    type: String,\r\n  },\r\n  progressPorUsuario: [progressSchema], // Adicione um array para armazenar o progresso por usuário\r\n});\r\n\r\nexport const Aula = model('Aula', aulaSchema);\r\n","import { IUser } from '@/types/IUser'\r\nimport { CollectionsEnum } from '@/types/TableEnum'\r\nimport { model, Schema, models } from 'mongoose'\r\nimport { isEmail } from 'validator'\r\nimport { mongooseErrorValidator } from '@/lib/mongooseErrorValidator'\r\n\r\nconst UserSchema = new Schema({\r\n  name: {\r\n    type: String,\r\n    required: [true, 'name']\r\n  },\r\n  email: {\r\n    type: String,\r\n    unique: true,\r\n    validate: [isEmail, '{VALUE} não é um email válido'],\r\n    sparse: true,\r\n    index: true\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: [true, 'password'],\r\n    index: true\r\n  },\r\n  photo: String\r\n}, {\r\n  timestamps: true\r\n})\r\n\r\nmongooseErrorValidator(UserSchema)\r\n\r\nconst User = models.users || model<IUser>(\r\n  CollectionsEnum.Users,\r\n  UserSchema,\r\n  CollectionsEnum.Users\r\n)\r\n\r\nexport {\r\n  User\r\n}\r\n","enum ErrorTypesEnum {\r\n  USER_CONTRACT_ALREADY_EXISTS = 'USER_CONTRACT_ALREADY_EXISTS',\r\n  RENT_TRANSACTION_NOT_FOUND = 'RENT_TRANSACTION_NOT_FOUND',\r\n  ALREADY_PAID_THE_RENT = 'ALREADY_PAID_THE_RENT',\r\n  RD_STATION_RESPONSE = 'RD_STATION_RESPONSE',\r\n  AXIOS_SETUP = 'AXIOS_SETUP',\r\n  CANT_ACCEPT_QUERY = 'CANT_ACCEPT_QUERY',\r\n  CANT_ACCEPT_ORIGIN = 'CANT_ACCEPT_ORIGIN',\r\n  INVALID_SCHEMA = 'INVALID_SCHEMA',\r\n  INVALID_UPDATE_INPUT = 'INVALID_UPDATE_INPUT',\r\n  EMAIL_ALREADY_EXISTS = 'EMAIL_ALREADY_EXISTS',\r\n  ORGANIZATION_ALREADY_EXISTS = 'ORGANIZATION_ALREADY_EXISTS',\r\n  UNKNOWN = 'UNKNOWN',\r\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\r\n  INVALID_PASSWORD_OR_EMAIL = 'INVALID_PASSWORD_OR_EMAIL',\r\n  NOT_AUTHORIZED = 'NOT_AUTHORIZED',\r\n  EMPTY_PASSWORD = 'EMPTY_PASSWORD',\r\n  PASSWORD_EQUAL_TO_PREVIUS = 'PASSWORD_EQUAL_TO_PREVIUS',\r\n  PREVIOUS_PASSWORD_NOT_MATCH = 'PREVIOUS_PASSWORD_NOT_MATCH',\r\n  SOCKET_CONNECTION_NOT_FOUND = 'SOCKET_CONNECTION_NOT_FOUND',\r\n  USER_SOCKET_CONNECTION_NOT_FOUND = 'USER_SOCKET_CONNECTION_NOT_FOUND',\r\n  ITEM_NOT_FOUND = 'ITEM_NOT_FOUND',\r\n  LOG_NOT_FOUND = 'LOG_NOT_FOUND',\r\n  PARTNER_NOT_FOUND = 'PARTNER_NOT_FOUND',\r\n  CONTRACT_NOT_FOUND = 'CONTRACT_NOT_FOUND',\r\n  ORGANIZATION_NOT_FOUND = 'ORGANIZATION_NOT_FOUND',\r\n  TERRITORY_NOT_FOUND = 'TERRITORY_NOT_FOUND',\r\n  ORGANIZATION_UPDATE_NOT_POSSIBLE = 'ORGANIZATION_UPDATE_NOT_POSSIBLE',\r\n  HELP_NOT_FOUND = 'HELP_NOT_FOUND',\r\n  SYSTEM_PROFILE_ACCESS_NOT_FOUND = 'SYSTEM_PROFILE_ACCESS_NOT_FOUND',\r\n  TIP_NOT_FOUND = 'TIP_NOT_FOUND',\r\n  CONTRACT_UPDATE_NOT_POSSIBLE = 'CONTRACT_UPDATE_NOT_POSSIBLE',\r\n  SYSTEM_MODULE_NOT_FOUND = 'SYSTEM_MODULE_NOT_FOUND',\r\n  USER_ITEM_NOT_FOUND = 'USER_ITEM_NOT_FOUND',\r\n  TEAM_NOT_FOUND = 'TEAM_NOT_FOUND',\r\n  GUEST_CODE_NOT_FOUND = 'GUEST_CODE_NOT_FOUND',\r\n  TEAM_UPDATE_NOT_POSSIBLE = 'CONTRACT_UPDATE_NOT_POSSIBLE',\r\n  INSUFFICIENT_CREDIT = 'INSUFFICIENT_CREDIT',\r\n  GUEST_LINK_NOT_ALLOWED = 'GUEST_LINK_NOT_ALLOWED',\r\n  GUEST_USER_FIELDS_MISSING = 'GUEST_USER_FIELDS_MISSING',\r\n  AVATAR_ITEM_NOT_FOUND = 'AVATAR_ITEM_NOT_FOUND',\r\n  ITEM_NOT_PURCHASED = 'ITEM_NOT_PURCHASED',\r\n  AVATAR_TYPE_NOT_FOUND = 'AVATAR_TYPE_NOT_FOUND',\r\n  GENDER_NOT_GIVEN = 'GENDER_NOT_GIVEN',\r\n  ITEMS_IDS_CANNOT_BE_EMPTY = 'ITEMS_IDS_CANNOT_BE_EMPTY',\r\n  TERRITORY_ITEM_NOT_FOUND = 'TERRITORY_ITEM_NOT_FOUND',\r\n  CLASS_ITEM_NOT_FOUND = 'CLASS_ITEM_NOT_FOUND',\r\n  CERTIFICATE_VALUE_NOT_ALLOWED = 'CERTIFICATE_VALUE_NOT_ALLOWED',\r\n  CLASS_NOTE_NOT_FOUND = 'CLASS_NOT_FOUND',\r\n  CLASS_NOTE_NOT_FROM_USER = 'CLASS_NOTE_NOT_FROM_USER',\r\n  CLASS_NOT_FOUND = 'CLASS_NOT_FOUND',\r\n  COURSE_NOT_FOUND = 'COURSE_NOT_FOUND',\r\n  USER_TERRITORY_NOT_FOUND = 'USER_TERRITORY_NOT_FOUND',\r\n  USER_TERRITORY_BASE_NOT_FOUND = 'USER_TERRITORY_BASE_NOT_FOUND',\r\n  USER_NOTE_NOT_FOUND = 'USER_NOTE_NOT_FOUND',\r\n  INVALID_USER_NOTE = 'INVALID_USER_NOTE',\r\n  JORNAL_NOT_FOUND = 'JORNAL_NOT_FOUND',\r\n  CLASS_COMMENT_NOT_FOUND = 'CLASS_COMMENT_NOT_FOUND',\r\n  REMOVE_CLASS_COMMENT_NOT_ALLOWED = 'REMOVE_CLASS_COMMENT_NOT_ALLOWED',\r\n  UPDATE_CLASS_COMMENT_NOT_ALLOWED = 'UPDATE_CLASS_COMMENT_NOT_ALLOWED',\r\n  CLASS_PLAN_NOT_FROM_USER = 'CLASS_PLAN_NOT_FROM_USER',\r\n  CLASS_PLAN_NOT_FOUND = 'CLASS_PLAN_NOT_FOUND',\r\n  CLASS_PLAN_MARKETPLACE_TRUE = 'CLASS_PLAN_MARKETPLACE_TRUE',\r\n  QUIZ_NOT_FOUND = 'QUIZ_NOT_FOUND',\r\n  CLASS_ITEM_TASK_NOT_FOUND = 'CLASS_ITEM_TASK_NOT_FOUND',\r\n  PLAYER_NOT_FOUND = 'PLAYER_NOT_FOUND',\r\n  CLASS_ITEM_RESPONSE_NOT_FOUND = 'CLASS_ITEM_RESPONSE_NOT_FOUND',\r\n  MESSAGE_NOT_FOUND = 'MESSAGE_NOT_FOUND',\r\n  MESSAGE_WAS_ALREADY_READ = 'MESSAGE_WAS_ALREADY_READ',\r\n  MESSAGE_NOT_FROM_USER = 'MESSAGE_NOT_FROM_USER',\r\n  CODE_ALREADY_EXISTS = 'CODE_ALREADY_EXISTS',\r\n  TERRITORY_TEAM_NOT_SPECIFIED = 'TERRITORY_TEAM_NOT_SPECIFIED',\r\n  FREE_BACKPACK_NOT_FOUND = 'FREE_BACKPACK_NOT_FOUND',\r\n  CODE_OR_EMAIL_NOT_INFORMED = 'CODE_OR_EMAIL_NOT_INFORMED',\r\n  REQUEST_FORGOTTEN_PASSWORD_NOT_ALLOWED = 'REQUEST_FORGOTTEN_PASSWORD_NOT_ALLOWED',\r\n  ONLY_CODE_OR_EMAIL_ALLOWED = 'ONLY_CODE_OR_EMAIL_ALLOWED',\r\n  NEW_PASSWORD_MATCH_PREVIOUS = 'NEW_PASSWORD_MATCH_PREVIOUS',\r\n  PASSWORD_NOT_INFORMED = 'PASSWORD_NOT_INFORMED',\r\n  WRONG_PASSWORD = 'WRONG_PASSWORD',\r\n  STORAGE_ITEM_TYPE_OR_CATEGORY_INVALID = 'STORAGE_ITEM_TYPE_OR_CATEGORY_INVALID',\r\n  MISSION_NOT_FOUND = 'MISSION_NOT_FOUND',\r\n  MODULE_NOT_FOUND = 'MODULE_NOT_FOUND',\r\n  USER_NOT_LOGGED_IN_A_TERRITORY = 'USER_NOT_LOGGED_IN_A_TERRITORY',\r\n  STORAGE_ITEM_NOT_AVAILABLE_SPACE = 'STORAGE_ITEM_NOT_AVAILABLE_SPACE',\r\n  ACTION_NOT_FOUND = 'ACTION_NOT_FOUND',\r\n  TASK_ANSWER_NOT_FOUND = 'TASK_ANSWER_NOT_FOUND',\r\n  INSUFICCIENT_XP_AMOUNT = 'INSUFICCIENT_XP_AMOUNT',\r\n  BUY_TIP_NOT_POSSIBLE = 'BUY_TIP_NOT_POSSIBLE',\r\n  INVALID_USER_MISSION = 'INVALID_USER_MISSION',\r\n  ACTION_HAS_NO_TIPS = 'ACTION_HAS_NO_TIPS',\r\n  INTERACT_ACTION_NOT_FOUND = 'INTERACT_ACTION_NOT_FOUND',\r\n  FIRST_ACTION_NOT_FOUND = 'FIRST_ACTION_NOT_FOUND',\r\n  HIDDEN_ITEM_NOT_FOUND = 'HIDDEN_ITEM_NOT_FOUND',\r\n  REQUIRED_ITEMS_NOT_FOUND = 'REQUIRED_ITEMS_NOT_FOUND',\r\n  INSUFFICIENT_VALUE = 'INSUFFICIENT_VALUE',\r\n  COURSE_MODULE_NOT_FOUND = 'COURSE_MODULE_NOT_FOUND',\r\n  JOB_NOT_FOUND = 'JOB_NOT_FOUND',\r\n  JOB_NOT_AVAILABLE_VACANCIES = 'JOB_NOT_AVAILABLE_VACANCIES',\r\n  NOT_ENOUGH_CERTIFICATES = 'NOT_ENOUGH_CERTIFICATES',\r\n  TEAM_MEET_INITIAL_NOT_ENABLED = 'TEAM_MEET_INITIAL_NOT_ENABLED',\r\n  ITEM_MEET_INITIAL_NOT_ENABLED = 'ITEM_MEET_INITIAL_NOT_ENABLED',\r\n  MEET_NOT_POSSIBLE = 'MEET_NOT_POSSIBLE',\r\n  MEET_NOT_FOUND = 'MEET_NOT_FOUND',\r\n  DEPENDENCY_FAILED = 'DEPENDENCY_FAILED',\r\n  NOT_AVAILABLE_TO_RENT = 'NOT_AVAILABLE_TO_RENT',\r\n  USER_HAS_OPEN_RENT_CONTRACT = 'USER_HAS_OPEN_RENT_CONTRACT',\r\n  RESIDENCE_NOT_FOUND = 'RESIDENCE_NOT_FOUND',\r\n  USER_RESIDENCE_NOT_FOUND = 'USER_RESIDENCE_NOT_FOUND',\r\n  ACTION_TASK_NOT_FOUND = 'ACTION_TASK_NOT_FOUND',\r\n  PRIMARY_TERRITORY_NOT_FOUND = 'PRIMARY_TERRITORY_NOT_FOUND',\r\n  REWARD_NOT_FOUND = 'REWARD_NOT_FOUND',\r\n  INVALID_ACTION_MINE = 'INVALID_ACTION_MINE',\r\n  USER_PYRAMID_NOT_FOUND = 'USER_PYRAMID_NOT_FOUND',\r\n  PYRAMID_NEEDS_NOT_FOUND_BY_KEYCODE = 'PYRAMID_NEEDS_NOT_FOUND_BY_KEYCODE',\r\n  PYRAMID_NEEDS_NOT_FOUND_BY_ID = 'PYRAMID_NEEDS_NOT_FOUND_BY_ID',\r\n  DAY_NOT_INFORMED = 'DAY_NOT_INFORMED',\r\n  REDEEM_NOT_POSSIBLE = 'REDEEM_NOT_POSSIBLE',\r\n  MUST_CONFIRM_EMAIL = 'MUST_CONFIRM_EMAIL',\r\n  EMAIL_NOT_INFORMED = 'EMAIL_NOT_INFORMED',\r\n  KINSHIP_PROPS_NOT_INFORMED = 'KINSHIP_PROPS_NOT_INFORMED',\r\n  BIRTH_DATE_NOT_INFORMED = 'BIRTH_DATE_NOT_INFORMED',\r\n  PERSONAL_EMAIL_MATCHES_KINSHIP_EMAIL = 'PERSONAL_EMAIL_MATCHES_KINSHIP_EMAIL',\r\n  ACCOUNT_VALIDATION_CODE_NOT_MATCH_USER_CODE = 'ACCOUNT_VALIDATION_CODE_NOT_MATCH_USER_CODE',\r\n  RESEND_CONFIRMATION_EMAIL_NOT_ALLOWED = 'RESEND_CONFIRMATION_EMAIL_NOT_ALLOWED',\r\n  GAME_NOT_FOUND = 'GAME_NOT_FOUND',\r\n  GAME_NOT_SET = 'GAME_NOT_SET',\r\n  ITEM_NOT_CONSUMABLE = 'ITEM_NOT_CONSUMABLE',\r\n  CONSUMABLE_ITEM_HAS_NO_PYRAMID_KEYCODE = 'CONSUMABLE_ITEM_HAS_NO_PYRAMID_KEYCODE',\r\n  GAME_SESSION_NOT_FOUND = 'GAME_SESSION_NOT_FOUND',\r\n  CHANNEL_NOT_FOUND = 'CHANNEL_NOT_FOUND',\r\n  USER_OWNER_REQUIRED_IN_PRIVATE_CHANNEL = 'USER_OWNER_REQUIRED_IN_PRIVATE_CHANNEL',\r\n  TEAM_DONT_HAVE_ACCESS_TO_TERRITORY = 'TEAM_DONT_HAVE_ACCESS_TO_TERRITORY',\r\n  USER_NOT_CHANNEL_MEMBER = 'USER_NOT_CHANNEL_MEMBER',\r\n  MESSAGE_MUST_HAVE_ONLY_ONE_RECEIVER_ENTITY = 'MESSAGE_MUST_HAVE_ONLY_ONE_RECEIVER_ENTITY',\r\n  USER_DONT_HAVE_ACCESS_TO_MODULE = 'USER_DONT_HAVE_ACCESS_TO_MODULE',\r\n  INVALID_BOARD_EXCHANGE = 'INVALID_BOARD_EXCHANGE',\r\n  ITEM_NOT_BOARD = 'ITEM_NOT_BOARD',\r\n  CARD_NOT_FOUND = 'CARD_NOT_FOUND',\r\n  BOARD_NOT_FOUND = 'BOARD_NOT_FOUND',\r\n  LABEL_NOT_FOUND = 'LABEL_NOT_FOUND',\r\n  LABEL_NOT_ON_CARD = 'LABEL_NOT_ON_CARD',\r\n  LABEL_ON_CARD_ALREADY = 'LABEL_ON_CARD_ALREADY',\r\n  USER_NOT_ON_CARD = 'USER_NOT_ON_CARD',\r\n  USER_ON_CARD_ALREADY = 'USER_ON_CARD_ALREADY',\r\n  ATTACHMENT_TYPE_INVALID = 'ATTACHMENT_TYPE_INVALID',\r\n  CARD_ATTACHMENT_NOT_FOUND = 'CARD_ATTACHMENT_NOT_FOUND',\r\n  CARD_ATTACHMENT_ALREADY_ATTACHED = 'CARD_ATTACHMENT_ALREADY_ATTACHED',\r\n  CARD_COMMENT_NOT_FOUND = 'CARD_COMMENT_NOT_FOUND',\r\n  USER_IS_NOT_CARD_COMMENT_AUTHOR = 'USER_IS_NOT_CARD_COMMENT_AUTHOR',\r\n  NPC_NOT_FOUND = 'NPC_NOT_FOUND',\r\n  CARD_CHECKLIST_NOT_FOUND = 'CARD_CHECKLIST_NOT_FOUND',\r\n  CARD_CHECKLIST_ITEM_NOT_FOUND = 'CARD_CHECKLIST_ITEM_NOT_FOUND',\r\n  ITEMS_IN_CARD_NOT_FOUND = 'ITEMS_IN_CARD_NOT_FOUND',\r\n  INVALID_POSITION = 'INVALID_POSITION',\r\n  INVALID_DIRECTION = 'INVALID_DIRECTION',\r\n  CARD_SESSION_ALREADY_OPEN = 'CARD_SESSION_ALREADY_OPEN',\r\n  CARD_SESSION_NOT_OPEN = 'CARD_SESSION_NOT_OPEN',\r\n  USER_NOT_SESSION_OWNER = 'USER_NOT_SESSION_OWNER',\r\n  USER_IN_SESSION_ALREADY = 'USER_IN_SESSION_ALREADY',\r\n  ACCEPT_CARD_SESSION_INVITE_NOT_ALLOWED = 'ACCEPT_CARD_SESSION_INVITE_NOT_ALLOWED',\r\n  USER_NOT_SESSION_MEMBER = 'USER_NOT_SESSION_MEMBER',\r\n  APP_NOT_FOUND = 'APP_NOT_FOUND',\r\n  ORGANIZATION_TYPE_NOT_FOUND = 'ORGANIZATION_TYPE_NOT_FOUND',\r\n  USER_NOT_ALLOWED_TO_REMOVE_CARD_CONSUMED_HISTORY = 'USER_NOT_ALLOWED_TO_REMOVE_CARD_CONSUMED_HISTORY',\r\n  CARD_CONSUMED_HISTORY_NOT_FOUND = 'CARD_CONSUMED_HISTORY_NOT_FOUND',\r\n  GROUP_NOT_FOUND = 'GROUP_NOT_FOUND',\r\n  USER_ALREADY_GROUP_MEMBER = 'USER_ALREADY_GROUP_MEMBER',\r\n  USER_NOT_GROUP_MEMBER = 'USER_NOT_GROUP_MEMBER',\r\n  CONTENT_CATEGORY_NOT_FOUND = 'CONTENT_CATEGORY_NOT_FOUND',\r\n  USER_NOT_INVITED_TO_MEET = 'USER_NOT_INVITED_TO_MEET',\r\n  PEER_ID_NOT_INFORMED = 'PEER_ID_NOT_INFORMED',\r\n  INVALID_RESIDENCE_TERRITORY = 'INVALID_RESIDENCE_TERRITORY',\r\n  USER_PROFESSIONAL_NOT_FOUND = 'USER_PROFESSIONAL_NOT_FOUND',\r\n  HISTORY_WORK_RECORD_NOT_FOUND = 'HISTORY_WORK_RECORD_NOT_FOUND',\r\n  NO_POINT_RECORD_FOUND = 'NO_POINT_RECORD_FOUND',\r\n  INVALID_LAST_EVENT = 'INVALID_LAST_EVENT',\r\n  INSUFFICIENT_BALANCE = 'INSUFFICIENT_BALANCE',\r\n  INVALID_VALUE = 'INVALID_VALUE',\r\n  USER_WALLET_NOT_FOUND = 'USER_WALLET_NOT_FOUND',\r\n  INVALID_USER_TO_TRANSFER_CREDITS = 'INVALID_USER_TO_TRANSFER_CREDITS',\r\n  USER_HAS_ALREADY_ANSWERED_TASK = 'USER_HAS_ALREADY_ANSWERED_TASK',\r\n  TRANSACTION_NOT_FOUND = 'TRANSACTION_NOT_FOUND',\r\n  TRANSACTION_FUTURE_NOT_FOUND = 'TRANSACTION_FUTURE_NOT_FOUND',\r\n  TASK_ANSWERED = 'TASK_ANSWERED',\r\n  QUIZ_CATEGORY_NOT_FOUND = 'QUIZ_CATEGORY_NOT_FOUND',\r\n  TEAM_HAS_NO_TERRITORY_TO_CREATE_DEFAULT_CHANNEL = 'TEAM_HAS_NO_TERRITORY_TO_CREATE_DEFAULT_CHANNEL',\r\n  COURSE_CANNOT_BE_USED_AS_TEMPLATE = 'COURSE_CANNOT_BE_USED_AS_TEMPLATE',\r\n  COURSE_NOT_FOUND_IN_ORGANIZATION_CONTRACT = 'COURSE_NOT_FOUND_IN_ORGANIZATION_CONTRACT',\r\n  COURSE_ALREADY_CLONED = 'COURSE_ALREADY_CLONED',\r\n  USER_NOT_ABLE_TO_UPDATE_MEET = 'USER_NOT_ABLE_TO_UPDATE_MEET',\r\n  PYRAMID_NEEDS_PERIOD_NOT_FOUND = 'PYRAMID_NEEDS_PERIOD_NOT_FOUND',\r\n  TERRITORY_ITEM_DOES_NOT_HAVE_VALID_STORAGE_CAPACITY = 'TERRITORY_ITEM_DOES_NOT_HAVE_VALID_STORAGE_CAPACITY',\r\n  FIRST_ACTION_MODULE_NOT_FOUND = 'FIRST_ACTION_MODULE_NOT_FOUND',\r\n  IMPOSSIBLE_CONSUME_DATE_EXPIRATED_ITEM = 'IMPOSSIBLE_CONSUME_DATE_EXPIRATED_ITEM',\r\n  END_DATE_LESS_INIT_DATE= 'END_DATE_LESS_INIT_DATE',\r\n  AWAITING_TEAM_CONFIRMATION = 'AWAITING_TEAM_CONFIRMATION',\r\n  SELECT_A_REJECTED_TEAM = 'SELECT_A_REJECTED_TEAM',\r\n  AWAITING_USER_CONFIRMATION = 'AWAITING_USER_CONFIRMATION',\r\n  EMAIL_ALREADY_EXISTS_IN_THIS_TEAM = 'EMAIL_ALREADY_EXISTS_IN_THIS_TEAM',\r\n  EMAIL_ALREADY_REGISTERED_TO_THOSE_TEAMS = 'EMAIL_ALREADY_REGISTERED_TO_THOSE_TEAMS',\r\n  SCRIPT_NOT_FOUND = 'SCRIPT_NOT_FOUND',\r\n  USER_HAS_NO_ACCESS_TO_TEAM = 'USER_HAS_NO_ACCESS_TO_TEAM',\r\n  USER_IS_NOT_A_PLAYER_ON_THE_TEAM = 'USER_IS_NOT_A_PLAYER_ON_THE_TEAM',\r\n  USER_IS_NOT_ON_THE_TEAM = 'USER_IS_NOT_ON_THE_TEAM',\r\n  USER_IS_NOT_PROFESSOR_IN_TEAM_SELECTED = 'USER_IS_NOT_PROFESSOR_IN_TEAM_SELECTED',\r\n  SYSTEM_CONFIG_NOT_FOUND = 'SYSTEM_CONFIG_NOT_FOUND',\r\n  TEAM_DONT_HAVE_TERRITORIES = 'TEAM_DONT_HAVE_TERRITORIES',\r\n  UNABLE_TO_CHANGE_USER_STATUS_ON_TEAM = 'UNABLE_TO_CHANGE_USER_STATUS_ON_TEAM',\r\n  ONLY_ACCEPT_OR_REJECT_TEAM_INVITATION = 'ONLY_ACCEPT_OR_REJECT_TEAM_INVITATION',\r\n  CLASS_ITEM_CALCULATE_TOTAL_TASK_WEIGHTS_FAILED = 'CLASS_ITEM_CALCULATE_TOTAL_TASK_WEIGHTS_FAILED',\r\n  CLASS_ITEM_GRADE_NOT_ALLOWED = 'CLASS_ITEM_GRADE_NOT_ALLOWED',\r\n  MESSAGE_RESPONSE_NOT_FOUND = 'MESSAGE_RESPONSE_NOT_FOUND',\r\n  CENSORED_MESSAGE = 'CENSORED_MESSAGE',\r\n  PREDEFINED_PHRASE_NOT_FOUND = 'PREDEFINED_PHRASE_NOT_FOUND',\r\n  TEAM_CHAT_READ_ONLY = 'TEAM_CHAT_READ_ONLY',\r\n  TERRITORY_IS_NOT_PRIMARY = 'TERRITORY_IS_NOT_PRIMARY',\r\n  INVALID_MEET_CLASS_ITEM = 'INVALID_MEET_CLASS_ITEM',\r\n  CLASS_ITEM_TASKS_IDS_NOT_INFORMED = 'CLASS_ITEM_TASKS_IDS_NOT_INFORMED',\r\n  SHOP_NOT_FOUND = 'SHOP_NOT_FOUND',\r\n  SHOP_PRICE_NOT_INFORMED = 'SHOP_PRICE_NOT_INFORMED',\r\n  COURSE_ID_NOT_INFORMED = 'COURSE_ID_NOT_INFORMED',\r\n  INVALID_PERFORMANCE_VALUE = 'INVALID_PERFORMANCE_VALUE',\r\n  ACTION_REWARD_ITEM_NOT_FOUND = 'ACTION_REWARD_ITEM_NOT_FOUND',\r\n  REPORT_NOT_FOUND = 'REPORT_NOT_FOUND',\r\n  CONTRACT_EXISTS = 'CONTRACT_EXISTS',\r\n  CONFIG_DOES_NOT_EXIST = 'CONFIG_DOES_NOT_EXIST',\r\n  CONFIG_IS_NOT_RIGHT = 'CONFIG_IS_NOT_RIGHT',\r\n  ITEM_IS_NOT_STORABLE = 'ITEM_IS_NOT_STORABLE',\r\n  USER_IS_ALREADY_IN_JOB = 'USER_IS_ALREADY_IN_JOB',\r\n  DELETE_ACTION_LINKED_TO_MISSION = 'DELETE_ACTION_LINKED_TO_MISSION',\r\n  USER_WITHOUT_PROFESSION = 'USER_WITHOUT_PROFESSION',\r\n  ACTION_NEED_CODE_FIELD_NOT_FOUND = 'ACTION_NEED_CODE_FIELD_NOT_FOUND',\r\n  INCORRECT_NEED_CODE = 'INCORRECT_NEED_CODE',\r\n  SOMETHING_WENT_WRONG_IN_GAME = 'SOMETHING_WENT_WRONG_IN_GAME',\r\n  INVALID_DATE_RANGE = 'INVALID_DATE_RANGE',\r\n  ITEM_IS_NOT_ALLOWED_DELETE = 'ITEM_IS_NOT_ALLOWED_DELETE',\r\n  INSUFFICIENT_BALANCE_TO_COMPLETE_ACTION = 'INSUFFICIENT_BALANCE_TO_COMPLETE_ACTION',\r\n  CSV_FILE_NOT_FOUND = 'CSV_FILE_NOT_FOUND',\r\n  INCOMPLETE_IMPORT_PROGRESS_NOT_FOUND = 'INCOMPLETE_IMPORT_PROGRESS_NOT_FOUND',\r\n  CSV_USER_EMAIL_CODE_NOT_INFORMED = 'CSV_USER_EMAIL_CODE_NOT_INFORMED',\r\n  CSV_TEAM_ID_NOT_INFORMED = 'CSV_TEAM_ID_NOT_INFORMED',\r\n  CSV_DATE_TIME_NOT_INFORMED = 'CSV_DATE_TIME_NOT_INFORMED',\r\n  CSV_WRONG_DATE_PATTERN = 'CSV_WRONG_DATE_PATTERN',\r\n  CSV_USER_SESSION_INVALID_SECONDS = 'CSV_USER_SESSION_INVALID_SECONDS',\r\n  CSV_USER_NOT_FOUND_BY_EMAIL_CODE = 'CSV_USER_NOT_FOUND_BY_EMAIL_CODE',\r\n  CSV_TEAM_NOT_FOUND = 'CSV_TEAM_NOT_FOUND',\r\n  CSV_USER_NOT_FOUND_IN_TEAM = 'CSV_USER_NOT_FOUND_IN_TEAM',\r\n  USER_IS_NOT_PROFESSOR_ON_CSV_TEAM = 'USER_IS_NOT_PROFESSOR_ON_CSV_TEAM',\r\n  CSV_CLASS_ITEM_ID_NOT_INFORMED = 'CSV_CLASS_ITEM_ID_NOT_INFORMED',\r\n  CSV_CLASS_ITEM_ID_NOT_FOUND = 'CSV_CLASS_ITEM_ID_NOT_FOUND',\r\n  CSV_NUMBER_FIELD_INVALID = 'CSV_NUMBER_FIELD_INVALID',\r\n  USER_IS_ALREADY_ON_TEAM = 'USER_IS_ALREADY_ON_TEAM',\r\n  CURRENT_USERS_TEAM_NOT_FOUND = 'CURRENT_USERS_TEAM_NOT_FOUND',\r\n  TEAM_TO_TRANSFER_USERS_NOT_FOUND = 'TEAM_TO_TRANSFER_USERS_NOT_FOUND',\r\n  TERRITORY_CLONE_ITEMS_OPTION_REQUIRED_TO_CLONE_ACTIONS = 'TERRITORY_CLONE_ITEMS_OPTION_REQUIRED_TO_CLONE_ACTIONS',\r\n  TERRITORY_CLONE_ACTIONS_OPTION_REQUIRED_TO_CLONE_MISSIONS = 'TERRITORY_CLONE_ACTIONS_OPTION_REQUIRED_TO_CLONE_MISSIONS',\r\n  SUB_TERRITORY_NOT_FOUND = 'SUB_TERRITORY_NOT_FOUND',\r\n  INVALID_CSV_FILE = 'INVALID_CSV_FILE',\r\n  CSV_REQUIRED_FIELDS_ERROR_WHEN_EMAIL_NOT_INFORMED = 'CSV_REQUIRED_FIELDS_ERROR_WHEN_EMAIL_NOT_INFORMED',\r\n  CSV_REQUIRED_FIELDS_NOT_INFORMED = 'CSV_REQUIRED_FIELDS_NOT_INFORMED',\r\n  CSV_INVALID_FIELD = 'CSV_INVALID_FIELD',\r\n  NO_SHOP_CLONED_COURSES_FOUND = 'NO_SHOP_CLONED_COURSES_FOUND',\r\n  SCRIPT_SYNC_SHOP_ALREADY_RUNNING = 'SCRIPT_SYNC_SHOP_ALREADY_RUNNING',\r\n  SCRIPT_ALREADY_RUNNING = 'SCRIPT_ALREADY_RUNNING',\r\n  GET_QUEUE_URL_JOB_INTERNAL_ERROR = 'GET_QUEUE_URL_JOB_INTERNAL_ERROR',\r\n  SEND_MESSAGE_QUEUE_JOB_INTERNAL_ERROR = 'SEND_MESSAGE_QUEUE_JOB_INTERNAL_ERROR',\r\n  CLASS_MODULE_NOT_FOUND = 'CLASS_MODULE_NOT_FOUND',\r\n  CLASS_TEAM_NOT_FOUND = 'CLASS_TEAM_NOT_FOUND',\r\n  COURSE_MODULES_EMPTY = 'COURSE_MODULES_EMPTY',\r\n  CLASS_COURSE_TYPE_NOT_QUESTIONS_TRAIL = 'CLASS_COURSE_TYPE_NOT_QUESTIONS_TRAIL',\r\n  LAPLACE_RANDOM_QUESTION_NOT_FOUND = 'LAPLACE_RANDOM_QUESTION_NOT_FOUND',\r\n  LAPLACE_RANDOM_QUESTION_WITHOUT_ALTERNATIVES = 'LAPLACE_RANDOM_QUESTION_WITHOUT_ALTERNATIVES',\r\n  USER_CLASS_NOT_FOUND = 'USER_CLASS_NOT_FOUND',\r\n  USER_CLASS_QUESTION_ALREADY_ANSWERED = 'USER_CLASS_QUESTION_ALREADY_ANSWERED',\r\n  CLASS_QUESTION_ANSWER_NOT_FOUND = 'CLASS_QUESTION_ANSWER_NOT_FOUND',\r\n  CLASS_COURSE_NOT_FOUND = 'CLASS_COURSE_NOT_FOUND',\r\n  LEVEL_SCHOOL_NOT_FOUND_OR_NOT_INFORMED = 'LEVEL_SCHOOL_NOT_FOUND_OR_NOT_INFORMED',\r\n  CLASS_QUESTION_RESPONSES_ATTEMPTS_TYPE_NOT_FOUND = 'CLASS_QUESTION_RESPONSES_ATTEMPTS_TYPE_NOT_FOUND',\r\n  IMPOSSIBLE_CALCULATE_CLASS_PROGRESS_BY_COURSE_TYPE = 'IMPOSSIBLE_CALCULATE_CLASS_PROGRESS_BY_COURSE_TYPE',\r\n  IMPOSSIBLE_CALCULATE_COURSE_PROGRESS_BY_COURSE_TYPE = 'IMPOSSIBLE_CALCULATE_COURSE_PROGRESS_BY_COURSE_TYPE',\r\n  TEAM_DOES_NOT_HAVE_ACCESS_MODULE = 'TEAM_DOES_NOT_HAVE_ACCESS_MODULE',\r\n  LAPLACE_REQUIRED_DATA_NOT_FOUND = 'LAPLACE_REQUIRED_DATA_NOT_FOUND',\r\n  USER_CANNOT_UPDATE_ITEM = 'USER_CANNOT_UPDATE_ITEM',\r\n  USER_CANNOT_DELETE_ITEM = 'USER_CANNOT_DELETE_ITEM',\r\n  TERRITORY_EXCEEDED_ATTEMPTS_TO_GENERATE_OPERATION_ID = 'TERRITORY_EXCEEDED_ATTEMPTS_TO_GENERATE_OPERATION_ID',\r\n  COURSE_FILTERS_LEVELS_NOT_FOUND = 'COURSE_FILTERS_LEVELS_NOT_FOUND',\r\n  COURSE_FILTER_LEVEL_ID_NOT_FOUND = 'COURSE_FILTER_LEVEL_ID_NOT_FOUND',\r\n  INVALID_COURSE_MODULE_LEVEL_SCHOOL = 'INVALID_COURSE_MODULE_LEVEL_SCHOOL',\r\n  INVALID_LAPLACE_FILTER_NAME = 'INVALID_LAPLACE_FILTER_NAME',\r\n  LAPLACE_FILTER_ALL_IDS_NOT_FOUND = 'LAPLACE_FILTER_ALL_IDS_NOT_FOUND',\r\n  LAPLACE_FILTER_ONE_ID_NOT_FOUND = 'LAPLACE_FILTER_ONE_ID_NOT_FOUND',\r\n  COURSE_TYPE_UPDATE_IS_NOT_ALLOWED = 'COURSE_TYPE_UPDATE_IS_NOT_ALLOWED',\r\n  CLASS_QUESTION_TYPE_NOT_FOUND = 'CLASS_QUESTION_TYPE_NOT_FOUND',\r\n  INVALID_CLASS_QUESTION_TYPE = 'INVALID_CLASS_QUESTION_TYPE',\r\n  CLASS_QUESTION_TYPE_IS_NOT_RANDOM = 'CLASS_QUESTION_TYPE_IS_NOT_RANDOM',\r\n  CLASS_QUESTION_NOT_FOUND = 'CLASS_QUESTION_NOT_FOUND',\r\n  COURSE_QUESTIONS_CONFIG_TYPE_NOT_INFORMED = 'COURSE_QUESTIONS_CONFIG_TYPE_NOT_INFORMED',\r\n  TOTAL_RANDOM_QUESTIONS_NOT_INFORMED = 'TOTAL_RANDOM_QUESTIONS_NOT_INFORMED',\r\n  LAPLACE_QUESTIONS_IDS_NOT_INFORMED_OR_EMPTY = 'LAPLACE_QUESTIONS_IDS_NOT_INFORMED_OR_EMPTY',\r\n  RESPONSES_ATTEMPT_TYPE_NOT_INFORMED = 'RESPONSES_ATTEMPT_TYPE_NOT_INFORMED',\r\n  RESPONSES_TOTAL_ATTEMPTS_NOT_INFORMED = 'RESPONSES_TOTAL_ATTEMPTS_NOT_INFORMED',\r\n  LEVEL_SCHOOL_NOT_FOUND = 'LEVEL_SCHOOL_NOT_FOUND',\r\n  LAPLACE_QUESTION_NOT_FOUND_BY_ID = 'LAPLACE_QUESTION_NOT_FOUND_BY_ID',\r\n  QUIZZES_FORMAT_NOT_FOUND_BY_NAME = 'QUIZZES_FORMAT_NOT_FOUND_BY_NAME',\r\n  LAPLACE_API_ERROR = 'LAPLACE_API_ERROR',\r\n  NOT_IMPLEMENTED = 'NOT_IMPLEMENTED',\r\n  INVALID_AUDIO_STREAM = 'INVALID_AUDIO_STREAM',\r\n  ACTION_EXTERNAL_SLIDER_TASKS_NOT_UNIQUE = 'ACTION_EXTERNAL_SLIDER_TASKS_NOT_UNIQUE',\r\n  IA_AUDIO_NOT_FOUND_IN_S3_BUCKET = 'IA_AUDIO_NOT_FOUND_IN_S3_BUCKET',\r\n  GET_IA_AUDIO_S3_BUCKET_FAILED = 'GET_IA_AUDIO_S3_BUCKET_FAILED',\r\n  ACTION_NO_ITEM_FALLBACK = 'ACTION_NO_ITEM_FALLBACK',\r\n  ACTION_INCORRECT_CODE_FALLBACK = 'ACTION_INCORRECT_CODE_FALLBACK',\r\n  ACTION_NO_LEVEL_FALLBACK = 'ACTION_NO_LEVEL_FALLBACK',\r\n  INSUFFICIENT_LEVEL_TO_ACCESS_ACTION = 'INSUFFICIENT_LEVEL_TO_ACCESS_ACTION',\r\n  ACTION_DIALOG_CANNOT_HAVE_NOTEPAD_FIELDS = 'ACTION_DIALOG_CANNOT_HAVE_NOTEPAD_FIELDS',\r\n  USER_TERRITORY_BASE_SELECTED_NOT_FOUND = 'USER_TERRITORY_BASE_SELECTED_NOT_FOUND',\r\n  PLAYER_DOES_NOT_HAVE_THE_ITEM = 'PLAYER_DOES_NOT_HAVE_THE_ITEM',\r\n  ACTION_VISUALIZATION_ITEM_NOT_FINISHED = 'ACTION_VISUALIZATION_ITEM_NOT_FINISHED',\r\n  ACTION_INTERACTION_AFTER_ITEM_NOT_EPUB = 'ACTION_INTERACTION_AFTER_ITEM_NOT_EPUB',\r\n  INVALID_ACTIONS_TO_BE_RELEASE_AFTER_CLASS_ITEM_PROVIDED = 'INVALID_ACTIONS_TO_BE_RELEASE_AFTER_CLASS_ITEM_PROVIDED',\r\n  ACTION_NO_VALID_EPUB_FOUND_IN_INTERACTION_AFTER_ITEMS = 'ACTION_NO_VALID_EPUB_FOUND_IN_INTERACTION_AFTER_ITEMS',\r\n  USER_WITHOUT_REQUIRED_LEVEL = 'USER_WITHOUT_REQUIRED_LEVEL',\r\n  ACTION_NO_INTERACTION_AFTER_ITEMS_FOUND = 'ACTION_NO_INTERACTION_AFTER_ITEMS_FOUND',\r\n  BLOCKLY_CONTEXT_IS_REQUIRED = 'BLOCKLY_CONTEXT_IS_REQUIRED',\r\n  BLOCKLY_METHOD_IS_REQUIRED = 'BLOCKLY_METHOD_IS_REQUIRED',\r\n  USER_ACTION_RELEASE_BY_CLASS_ITEM_OPEN_NOT_FOUND = 'USER_ACTION_RELEASE_BY_CLASS_ITEM_OPEN_NOT_FOUND',\r\n  INTERNAL_ERROR = 'INTERNAL_ERROR'\r\n}\r\n\r\nexport {\r\n  ErrorTypesEnum\r\n}\r\n","enum CollectionsEnum {\r\n  Users = 'users',\r\n  Contracts = 'contracts',\r\n  SystemModules = 'system_modules',\r\n  SystemProfilesAccess = 'system_profiles_access',\r\n  Organizations = 'organizations',\r\n  Teams = 'teams',\r\n  Territories = 'territories',\r\n  Tilesets = 'tilesets',\r\n  UserConnections = 'user_connections',\r\n  Logs = 'logs',\r\n  LogsIntegration = 'logs_integration',\r\n  DeepLink = 'deep_links',\r\n  Items = 'items',\r\n  Partners = 'partners',\r\n  Helps = 'helps',\r\n  Tips = 'tips',\r\n  Transactions = 'transactions',\r\n  Credits = 'credits',\r\n  TerritoryItems ='territory_items',\r\n  ClassItems = 'class_items',\r\n  Classes = 'classes',\r\n  Courses = 'courses',\r\n  ClassComments = 'class_comments',\r\n  ClassNote = 'class_notes',\r\n  TeamTerritories = 'team_territories',\r\n  UserNotes = 'user_notes',\r\n  Npcs = 'npcs',\r\n  Jornals = 'jornals',\r\n  ClassPlans = 'class_plans',\r\n  Quizzes = 'quizzes',\r\n  ClassItemResponses = 'class_item_responses',\r\n  UserTerritories = 'user_territories',\r\n  CourseProgress = 'course_progress',\r\n  Messages = 'messages',\r\n  MessagesRead = 'messages_read',\r\n  ContactMessage = 'contacts_message',\r\n  Missions = 'missions',\r\n  Actions = 'actions',\r\n  XpHistory = 'xp_history',\r\n  UserMissions = 'user_missions',\r\n  Modules = 'modules',\r\n  UserActions = 'user_actions',\r\n  UserActionClick = 'user_action_click',\r\n  HiddenItems = 'hidden_items',\r\n  TerritoryItemShow = 'territory_item_show',\r\n  UserActionsRandom = 'user_actions_random',\r\n  TerritoryItemHidden = 'territory_item_hidden',\r\n  ClassProgress = 'class_progress',\r\n  ClassItemViews = 'class_item_views',\r\n  ProfessionalsRoles = 'professionals_roles',\r\n  ProfessionalsTerritory = 'professionals_territory',\r\n  UserProfessionals = 'user_professionals',\r\n  TransactionFuture = 'transactions_future',\r\n  PyramidNeeds = 'pyramid_needs',\r\n  UserPyramids = 'user_pyramids',\r\n  Meets = 'meets',\r\n  ResidencesTerritory = 'residences_territory',\r\n  UserResidences = 'user_residences',\r\n  UserRewards = 'user_rewards',\r\n  UserQuizzes = 'user_quizzes',\r\n  Games = 'games',\r\n  GameSessions = 'game_sessions',\r\n  TerritoryItemsConsumed = 'territory_items_consumed',\r\n  Notifications = 'notifications',\r\n  Channels = 'channels',\r\n  UserClassItems = 'user_class_items',\r\n  Cards = 'cards',\r\n  Boards = 'boards',\r\n  CardComments = 'card_comments',\r\n  Labels = 'labels',\r\n  OrganizationTypes = 'organization_types',\r\n  Apps = 'apps',\r\n  ContentCategories = 'content_categories',\r\n  Groups = 'groups',\r\n  Script = 'scripts',\r\n  SystemConfig = 'configs',\r\n  WordsForbidden = 'words_forbidden',\r\n  Phrase = 'phrases',\r\n  Shopping = 'shopping',\r\n  Reports = 'reports',\r\n  UserSession = 'user_sessions',\r\n  UserStatistic = 'user_statistics',\r\n  QuizzesEnemCognitiveAxes = 'quizzes_enem_cognitive_axes',\r\n  QuizzesGraphicElements = 'quizzes_graphic_elements',\r\n  QuizzesEnemAreas = 'quizzes_enem_areas',\r\n  QuizzesKnowledgeSets = 'quizzes_knowledge_sets',\r\n  QuizzesThematicUnits = 'quizzes_thematic_units',\r\n  QuizzesSubjects = 'quizzes_subjects',\r\n  QuizzesTopics = 'quizzes_topics',\r\n  QuizzesChapters = 'quizzes_chapters',\r\n  QuizzesDisciplines = 'quizzes_disciplines',\r\n  QuizzesBNCCAreas = 'quizzes_bncc_areas',\r\n  QuizzesEnemMatrixs = 'quizzes_enem_matrixs',\r\n  QuizzesBNCCCompetency = 'quizzes_bncc_competencies',\r\n  QuizzesBNCCSkills = 'quizzes_bncc_skills',\r\n  QuizzesYears = 'quizzes_years',\r\n  QuizzesDifficultyLevels = 'quizzes_difficulty_levels',\r\n  QuizzesComplexities = 'quizzes_complexities',\r\n  QuizzesInstitutions = 'quizzes_institutions',\r\n  QuizzesFormats = 'quizzes_formats',\r\n  QuizzesPhases = 'quizzes_phases',\r\n  QuizzesExams = 'quizzes_exams',\r\n  Countries = 'countries',\r\n  States = 'states',\r\n  Regionals = 'regionals',\r\n  Cities = 'cities',\r\n  SyncAssets = 'sync_assets',\r\n  ImportLotesProgress = 'import_lotes_progress',\r\n  DatasetSeed = 'dataset_seed',\r\n  EmailValidations = 'email_validations',\r\n  SubscriptionPlans = 'subscription_plans',\r\n  Subscriptions = 'subscriptions',\r\n  JobSyncLogs = 'job_sync_logs',\r\n  UserClasses = 'user_classes',\r\n  Transcriptions = 'transcriptions',\r\n  Blocks = 'blocks'\r\n}\r\n\r\nexport {\r\n  CollectionsEnum\r\n}\r\n","module.exports = require(\"crypto\");","module.exports = require(\"dotenv\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lambda-router\");","module.exports = require(\"mongoose\");","module.exports = require(\"nanoid\");","module.exports = require(\"validator\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { saveProgressHandler } from './saveProgress';  // Importe o novo handler\r\nimport { auth } from '@/lib/auth';  // Importe o módulo de autenticação\r\n\r\nimport { buildRouter, buildHandler } from '@/lib/router';\r\nimport { createAulaHandler } from './createAula';\r\nimport { deleteAulaHandler } from './deleteAula';\r\nimport { getAulaHandler } from './getAula';\r\nimport { listAulasHandler } from './listAulas';\r\nimport { updateAulaHandler } from './updateAula';\r\n\r\nconst router = buildRouter();\r\n\r\nrouter.post('/aulas', auth.verifyLogged(createAulaHandler));\r\nrouter.get('/aulas/{aulaId}', auth.verifyLogged(getAulaHandler));\r\nrouter.put('/aulas', auth.verifyLogged(updateAulaHandler));\r\nrouter.get('/aulas', auth.verifyLogged(listAulasHandler));\r\nrouter.delete('/aulas/{aulaId}', auth.verifyLogged(deleteAulaHandler));\r\n\r\n// Adicione a nova rota para salvar progresso\r\nrouter.post('/aulas/{aulaId}/mine', auth.verifyLogged(saveProgressHandler));\r\n\r\nconst main = buildHandler(router);\r\n\r\nexport { main };\r\n"],"names":[],"sourceRoot":""}