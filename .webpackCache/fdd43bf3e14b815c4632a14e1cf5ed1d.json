{"remainingRequest":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js!C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\models\\userModel.ts","dependencies":[{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\models\\userModel.ts","mtime":1704481060456},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsNCmV4cG9ydHMuVXNlciA9IHZvaWQgMDsNCnZhciBUYWJsZUVudW1fMSA9IHJlcXVpcmUoIkAvdHlwZXMvVGFibGVFbnVtIik7DQp2YXIgbW9uZ29vc2VfMSA9IHJlcXVpcmUoIm1vbmdvb3NlIik7DQp2YXIgdmFsaWRhdG9yXzEgPSByZXF1aXJlKCJ2YWxpZGF0b3IiKTsNCnZhciBtb25nb29zZUVycm9yVmFsaWRhdG9yXzEgPSByZXF1aXJlKCJAL2xpYi9tb25nb29zZUVycm9yVmFsaWRhdG9yIik7DQp2YXIgVXNlclNjaGVtYSA9IG5ldyBtb25nb29zZV8xLlNjaGVtYSh7DQogICAgbmFtZTogew0KICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ25hbWUnXQ0KICAgIH0sDQogICAgZW1haWw6IHsNCiAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICB1bmlxdWU6IHRydWUsDQogICAgICAgIHZhbGlkYXRlOiBbdmFsaWRhdG9yXzEuaXNFbWFpbCwgJ3tWQUxVRX0gbsOjbyDDqSB1bSBlbWFpbCB2w6FsaWRvJ10sDQogICAgICAgIHNwYXJzZTogdHJ1ZSwNCiAgICAgICAgaW5kZXg6IHRydWUNCiAgICB9LA0KICAgIHBhc3N3b3JkOiB7DQogICAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgICAgcmVxdWlyZWQ6IFt0cnVlLCAncGFzc3dvcmQnXSwNCiAgICAgICAgaW5kZXg6IHRydWUNCiAgICB9LA0KICAgIHBob3RvOiBTdHJpbmcNCn0sIHsNCiAgICB0aW1lc3RhbXBzOiB0cnVlDQp9KTsNCigwLCBtb25nb29zZUVycm9yVmFsaWRhdG9yXzEubW9uZ29vc2VFcnJvclZhbGlkYXRvcikoVXNlclNjaGVtYSk7DQp2YXIgVXNlciA9IG1vbmdvb3NlXzEubW9kZWxzLnVzZXJzIHx8ICgwLCBtb25nb29zZV8xLm1vZGVsKShUYWJsZUVudW1fMS5Db2xsZWN0aW9uc0VudW0uVXNlcnMsIFVzZXJTY2hlbWEsIFRhYmxlRW51bV8xLkNvbGxlY3Rpb25zRW51bS5Vc2Vycyk7DQpleHBvcnRzLlVzZXIgPSBVc2VyOw0K"},{"version":3,"file":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\models\\userModel.ts","sourceRoot":"","sources":["C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\models\\userModel.ts"],"names":[],"mappings":";;;AACA,+CAAmD;AACnD,qCAAgD;AAChD,uCAAmC;AACnC,uEAAqE;AAErE,IAAM,UAAU,GAAG,IAAI,iBAAM,CAAC;IAC5B,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC;KACzB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;QACZ,QAAQ,EAAE,CAAC,mBAAO,EAAE,+BAA+B,CAAC;QACpD,MAAM,EAAE,IAAI;QACZ,KAAK,EAAE,IAAI;KACZ;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC;QAC5B,KAAK,EAAE,IAAI;KACZ;IACD,KAAK,EAAE,MAAM;CACd,EAAE;IACD,UAAU,EAAE,IAAI;CACjB,CAAC,CAAA;AAEF,IAAA,+CAAsB,EAAC,UAAU,CAAC,CAAA;AAElC,IAAM,IAAI,GAAG,iBAAM,CAAC,KAAK,IAAI,IAAA,gBAAK,EAChC,2BAAe,CAAC,KAAK,EACrB,UAAU,EACV,2BAAe,CAAC,KAAK,CACtB,CAAA;AAGC,oBAAI","sourcesContent":["import { IUser } from '@/types/IUser'\r\nimport { CollectionsEnum } from '@/types/TableEnum'\r\nimport { model, Schema, models } from 'mongoose'\r\nimport { isEmail } from 'validator'\r\nimport { mongooseErrorValidator } from '@/lib/mongooseErrorValidator'\r\n\r\nconst UserSchema = new Schema({\r\n  name: {\r\n    type: String,\r\n    required: [true, 'name']\r\n  },\r\n  email: {\r\n    type: String,\r\n    unique: true,\r\n    validate: [isEmail, '{VALUE} não é um email válido'],\r\n    sparse: true,\r\n    index: true\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: [true, 'password'],\r\n    index: true\r\n  },\r\n  photo: String\r\n}, {\r\n  timestamps: true\r\n})\r\n\r\nmongooseErrorValidator(UserSchema)\r\n\r\nconst User = models.users || model<IUser>(\r\n  CollectionsEnum.Users,\r\n  UserSchema,\r\n  CollectionsEnum.Users\r\n)\r\n\r\nexport {\r\n  User\r\n}\r\n"]}]}