{"remainingRequest":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js!C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\handlers\\classes\\classService.ts","dependencies":[{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\handlers\\classes\\classService.ts","mtime":1704497700785},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\handlers\\classes\\classService.ts","sourceRoot":"","sources":["C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\handlers\\classes\\classService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAmC;AACnC,kDAA2C;AAG3C,gDAA8C;AAC9C,6CAA2C;AAE3C,IAAM,MAAM,GAAG,UAAO,IAAY,EAAE,IAAW;;;;oBAC5B,qBAAM,kBAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAA;;gBAAnC,QAAQ,GAAG,SAAwB;gBAEzC,qBAAM,uBAAU,CAAC,MAAM,CAAC;wBACtB,IAAI,EAAE,IAAI,CAAC,GAAG;wBACd,KAAK,EAAE,YAAY;wBACnB,MAAM,EAAE,sBAAe,QAAQ,CAAC,GAAG,yBAAsB;qBAC1D,CAAC,EAAA;;gBAJF,SAIE,CAAA;gBAEF,sBAAO,QAAQ,EAAA;;;KAChB,CAAA;AAiDC,wBAAM;AA/CR,IAAM,MAAM,GAAG,UAAO,IAAY,EAAE,IAAW;;;;oBACxB,qBAAM,kBAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAA;;gBAA3E,YAAY,GAAG,SAA4D;gBAEjF,IAAI,CAAC,YAAY,EAAE;oBACjB,MAAM,IAAA,aAAK,EAAC,yBAAW,CAAC,eAAe,CAAC,CAAA;iBACzC;gBAED,qBAAM,uBAAU,CAAC,MAAM,CAAC;wBACtB,IAAI,EAAE,IAAI,CAAC,GAAG;wBACd,KAAK,EAAE,gBAAgB;wBACvB,MAAM,EAAE,sBAAe,YAAY,CAAC,GAAG,6BAA0B;qBAClE,CAAC,EAAA;;gBAJF,SAIE,CAAA;gBAEF,sBAAO,YAAY,EAAA;;;KACpB,CAAA;AAkCC,wBAAM;AAhCR,IAAM,GAAG,GAAG,UAAO,OAAe;;;;oBACb,qBAAM,kBAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAA;;gBAA1C,UAAU,GAAG,SAA6B;gBAEhD,IAAI,CAAC,UAAU,EAAE;oBACf,MAAM,IAAA,aAAK,EAAC,yBAAW,CAAC,eAAe,CAAC,CAAA;iBACzC;gBAED,sBAAO,UAAU,EAAA;;;KAClB,CAAA;AAyBC,kBAAG;AAvBL,IAAM,IAAI,GAAG;;QACX,sBAAO,kBAAK,CAAC,IAAI,EAAE,EAAA;;KACpB,CAAA;AAsBC,oBAAI;AApBN,IAAM,MAAM,GAAG,UAAO,OAAe,EAAE,IAAW;;;;oBAC3B,qBAAM,kBAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAA;;gBAArD,YAAY,GAAG,SAAsC;gBAE3D,IAAI,CAAC,YAAY,EAAE;oBACjB,MAAM,IAAA,aAAK,EAAC,yBAAW,CAAC,eAAe,CAAC,CAAA;iBACzC;gBAED,qBAAM,uBAAU,CAAC,MAAM,CAAC;wBACtB,IAAI,EAAE,IAAI,CAAC,GAAG;wBACd,KAAK,EAAE,cAAc;wBACrB,MAAM,EAAE,sBAAe,YAAY,CAAC,GAAG,gCAAwB;qBAChE,CAAC,EAAA;;gBAJF,SAIE,CAAA;gBAEF,sBAAO,YAAY,EAAA;;;KACpB,CAAA;AAOC,wBAAM","sourcesContent":["import { error } from '@/lib/error'\r\nimport { Class } from '@/models/classModel'\r\nimport { IUser } from '@/types/IUser'\r\nimport { IClass } from '@/types/IClass'\r\nimport { logService } from '../log/logService'\r\nimport { classErrors } from './classErrors'\r\n\r\nconst create = async (data: IClass, user: IUser) => {\r\n  const newClass = await Class.create(data)\r\n\r\n  await logService.create({\r\n    user: user._id,\r\n    event: 'Criar aula',\r\n    detail: `Aula com id ${newClass._id} criada com sucesso!`\r\n  })\r\n\r\n  return newClass\r\n}\r\n\r\nconst update = async (data: IClass, user: IUser) => {\r\n  const updatedClass = await Class.findByIdAndUpdate(data._id, data, { new: true })\r\n\r\n  if (!updatedClass) {\r\n    throw error(classErrors.CLASS_NOT_FOUND)\r\n  }\r\n\r\n  await logService.create({\r\n    user: user._id,\r\n    event: 'Atualizar aula',\r\n    detail: `Aula com id ${updatedClass._id} atualizada com sucesso!`\r\n  })\r\n\r\n  return updatedClass\r\n}\r\n\r\nconst get = async (classId: string) => {\r\n  const foundClass = await Class.findById(classId)\r\n\r\n  if (!foundClass) {\r\n    throw error(classErrors.CLASS_NOT_FOUND)\r\n  }\r\n\r\n  return foundClass\r\n}\r\n\r\nconst list = async () => {\r\n  return Class.find()\r\n}\r\n\r\nconst remove = async (classId: string, user: IUser) => {\r\n  const deletedClass = await Class.findByIdAndRemove(classId)\r\n\r\n  if (!deletedClass) {\r\n    throw error(classErrors.CLASS_NOT_FOUND)\r\n  }\r\n\r\n  await logService.create({\r\n    user: user._id,\r\n    event: 'Excluir aula',\r\n    detail: `Aula com id ${deletedClass._id} excluída com sucesso!`\r\n  })\r\n\r\n  return deletedClass\r\n}\r\n\r\nexport {\r\n  create,\r\n  update,\r\n  get,\r\n  list,\r\n  remove\r\n}\r\n"]}]}