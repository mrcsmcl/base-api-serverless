{"remainingRequest":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js!C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\lib\\router.ts","dependencies":[{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\lib\\router.ts","mtime":1704481060436},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOw0KdmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7DQogICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9DQogICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7DQogICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH0NCiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbInRocm93Il0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfQ0KICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfQ0KICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7DQogICAgfSk7DQp9Ow0KdmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHsNCiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnOw0KICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCAidGhyb3ciOiB2ZXJiKDEpLCAicmV0dXJuIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSAiZnVuY3Rpb24iICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnOw0KICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfQ0KICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHsNCiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy4iKTsNCiAgICAgICAgd2hpbGUgKGcgJiYgKGcgPSAwLCBvcFswXSAmJiAoXyA9IDApKSwgXykgdHJ5IHsNCiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbInJldHVybiJdIDogb3BbMF0gPyB5WyJ0aHJvdyJdIHx8ICgodCA9IHlbInJldHVybiJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDsNCiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTsNCiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHsNCiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhazsNCiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9Ow0KICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTsNCiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7DQogICAgICAgICAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9DQogICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9DQogICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfQ0KICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9DQogICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTsNCiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pOw0KICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9DQogICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9Ow0KICAgIH0NCn07DQpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7IHZhbHVlOiB0cnVlIH0pOw0KZXhwb3J0cy5idWlsZEhhbmRsZXIgPSBleHBvcnRzLmJ1aWxkUm91dGVyID0gdm9pZCAwOw0KdmFyIGxhbWJkYV9yb3V0ZXJfMSA9IHJlcXVpcmUoImxhbWJkYS1yb3V0ZXIiKTsNCnZhciBFcnJvclR5cGVzRW51bV8xID0gcmVxdWlyZSgiQC90eXBlcy9FcnJvclR5cGVzRW51bSIpOw0KdmFyIGRhdGFiYXNlXzEgPSByZXF1aXJlKCJAL2xpYi9kYXRhYmFzZSIpOw0KdmFyIGF1dGhfMSA9IHJlcXVpcmUoIi4vYXV0aCIpOw0KdmFyIGkxOG5fMSA9IHJlcXVpcmUoIi4vaTE4biIpOw0KdmFyIGJ1aWxkUm91dGVyID0gZnVuY3Rpb24gKCkgew0KICAgIHZhciByb3V0ZXIgPSAoMCwgbGFtYmRhX3JvdXRlcl8xLlJvdXRlcikoew0KICAgICAgICBwYXJzZUJvZHk6IHRydWUsDQogICAgICAgIGRlY29kZUV2ZW50OiB0cnVlLA0KICAgICAgICBpbmNsdWRlRXJyb3JTdGFjazogdHJ1ZQ0KICAgIH0pOw0KICAgIHJvdXRlci51bmtub3duKGZ1bmN0aW9uIChfZXZlbnQsIF9hLCBwYXRoLCBtZXRob2QpIHsNCiAgICAgICAgdmFyIHJlc3BvbnNlID0gX2EucmVzcG9uc2U7DQogICAgICAgIHJldHVybiByZXNwb25zZSg0MDQsIHsNCiAgICAgICAgICAgIG1lc3NhZ2U6ICIiLmNvbmNhdChtZXRob2QsICIgb24gIikuY29uY2F0KHBhdGgsICIgbm90IGZvdW5kIikNCiAgICAgICAgfSk7DQogICAgfSk7DQogICAgcm91dGVyLmJlZm9yZVJvdXRlKGZ1bmN0aW9uIChldmVudCkgew0KICAgICAgICB2YXIgX2EgPSBldmVudC5wYXRoUGFyYW1ldGVycywgcGF0aFBhcmFtZXRlcnMgPSBfYSA9PT0gdm9pZCAwID8ge30gOiBfYSwgX2IgPSBldmVudC5xdWVyeVN0cmluZ1BhcmFtZXRlcnMsIHF1ZXJ5U3RyaW5nUGFyYW1ldGVycyA9IF9iID09PSB2b2lkIDAgPyB7fSA6IF9iLCBib2R5ID0gZXZlbnQuYm9keTsNCiAgICAgICAgZXZlbnQucGFyYW1zID0gcGF0aFBhcmFtZXRlcnM7DQogICAgICAgIGV2ZW50LnF1ZXJ5ID0gcXVlcnlTdHJpbmdQYXJhbWV0ZXJzOw0KICAgICAgICBldmVudC5ib2R5ID0gYm9keSAhPT0gbnVsbCAmJiBib2R5ICE9PSB2b2lkIDAgPyBib2R5IDoge307DQogICAgfSk7DQogICAgcm91dGVyLmZvcm1hdEVycm9yKGZ1bmN0aW9uIChfc3RhdHVzQ29kZSwgZXJyb3IpIHsNCiAgICAgICAgaWYgKCFlcnJvci50eXBlKSB7DQogICAgICAgICAgICBlcnJvci50eXBlID0gRXJyb3JUeXBlc0VudW1fMS5FcnJvclR5cGVzRW51bS5VTktOT1dOOw0KICAgICAgICB9DQogICAgICAgIHJldHVybiBlcnJvcjsNCiAgICB9KTsNCiAgICByZXR1cm4gcm91dGVyOw0KfTsNCmV4cG9ydHMuYnVpbGRSb3V0ZXIgPSBidWlsZFJvdXRlcjsNCnZhciBjb25uUHJvbWlzZSA9ICgwLCBkYXRhYmFzZV8xLmNvbm5lY3QpKHsgbWF4UG9vbFNpemU6IDEsIG1pblBvb2xTaXplOiAwLCBtYXhJZGxlVGltZU1TOiAxMDAwIH0pOw0KdmFyIGJ1aWxkSGFuZGxlciA9IGZ1bmN0aW9uIChyb3V0ZXIsIGNvbmZpZykgew0KICAgIHJldHVybiBmdW5jdGlvbiAoZXZlbnQsIGNvbnRleHQpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgUHJvbWlzZSwgZnVuY3Rpb24gKCkgew0KICAgICAgICB2YXIgcmVzdWx0LCByZXNwb25zZTsNCiAgICAgICAgdmFyIF9hOw0KICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9iKSB7DQogICAgICAgICAgICBzd2l0Y2ggKF9iLmxhYmVsKSB7DQogICAgICAgICAgICAgICAgY2FzZSAwOg0KICAgICAgICAgICAgICAgICAgICBjb250ZXh0ID0gY29udGV4dCB8fCB7fTsNCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgY29ublByb21pc2VdOw0KICAgICAgICAgICAgICAgIGNhc2UgMToNCiAgICAgICAgICAgICAgICAgICAgX2Iuc2VudCgpOw0KICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmNhbGxiYWNrV2FpdHNGb3JFbXB0eUV2ZW50TG9vcCA9IGZhbHNlOw0KICAgICAgICAgICAgICAgICAgICBpZiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmF1dGgpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHJvdXRlci5iZWZvcmVSb3V0ZShmdW5jdGlvbiAoZXZlbnQpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sIGF1dGhfMS5hdXRoLnZlcmlmeUNvbnRleHQoZXZlbnQpXTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMToNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYS5zZW50KCk7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgICAgICB9KTsgfSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgcm91dGVyLnJvdXRlKGV2ZW50LCBjb250ZXh0KV07DQogICAgICAgICAgICAgICAgY2FzZSAyOg0KICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSBfYi5zZW50KCk7DQogICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gaTE4bl8xLmkxOG4ucmVzb2x2ZSh7DQogICAgICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZTogKF9hID0gZXZlbnQgPT09IG51bGwgfHwgZXZlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGV2ZW50LmhlYWRlcnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sYW5ndWFnZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlOiByZXN1bHQucmVzcG9uc2UNCiAgICAgICAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCByZXNwb25zZV07DQogICAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgIH0pOyB9Ow0KfTsNCmV4cG9ydHMuYnVpbGRIYW5kbGVyID0gYnVpbGRIYW5kbGVyOw0K"},{"version":3,"file":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\lib\\router.ts","sourceRoot":"","sources":["C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\lib\\router.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+CAAsC;AACtC,yDAAuD;AACvD,2CAAwC;AAExC,+BAA6B;AAC7B,+BAA6B;AAE7B,IAAM,WAAW,GAAG;IAClB,IAAM,MAAM,GAAG,IAAA,sBAAM,EAAC;QACpB,SAAS,EAAE,IAAI;QACf,WAAW,EAAE,IAAI;QACjB,iBAAiB,EAAE,IAAI;KACxB,CAAC,CAAA;IAEF,MAAM,CAAC,OAAO,CAAC,UAAC,MAAM,EAAE,EAAY,EAAE,IAAI,EAAE,MAAM;YAAxB,QAAQ,cAAA;QAChC,OAAO,QAAQ,CAAC,GAAG,EAAE;YACnB,OAAO,EAAE,UAAG,MAAM,iBAAO,IAAI,eAAY;SAC1C,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,MAAM,CAAC,WAAW,CAAC,UAAA,KAAK;QACd,IAAA,KAA0D,KAAK,eAA5C,EAAnB,cAAc,mBAAG,EAAE,KAAA,EAAE,KAAqC,KAAK,sBAAhB,EAA1B,qBAAqB,mBAAG,EAAE,KAAA,EAAE,IAAI,GAAK,KAAK,KAAV,CAAU;QACvE,KAAK,CAAC,MAAM,GAAG,cAAc,CAAA;QAC7B,KAAK,CAAC,KAAK,GAAG,qBAAqB,CAAA;QACnC,KAAK,CAAC,IAAI,GAAG,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,EAAE,CAAA;IACzB,CAAC,CAAC,CAAA;IAEF,MAAM,CAAC,WAAW,CAAC,UAAC,WAAW,EAAE,KAAK;QACpC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YACf,KAAK,CAAC,IAAI,GAAG,+BAAc,CAAC,OAAO,CAAA;SACpC;QAED,OAAO,KAAK,CAAA;IACd,CAAC,CAAC,CAAA;IAEF,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AA4BC,kCAAW;AA1Bb,IAAM,WAAW,GAAG,IAAA,kBAAO,EAAC,EAAE,WAAW,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAA;AAEpF,IAAM,YAAY,GAAG,UAAC,MAAM,EAAE,MAAO;IACnC,OAAA,UAAO,KAAK,EAAE,OAAgB,qCAAG,OAAO;;;;;;oBACtC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAA;oBAEvB,qBAAM,WAAW,EAAA;;oBAAjB,SAAiB,CAAA;oBACjB,OAAO,CAAC,8BAA8B,GAAG,KAAK,CAAA;oBAE9C,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,EAAE;wBAChB,MAAM,CAAC,WAAW,CAAC,UAAM,KAAK;;;4CAC5B,qBAAM,WAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAA;;wCAA/B,SAA+B,CAAA;;;;6BAChC,CAAC,CAAA;qBACH;oBAEc,qBAAM,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,EAAA;;oBAA3C,MAAM,GAAG,SAAkC;oBAE3C,QAAQ,GAAG,WAAI,CAAC,OAAO,CAAC;wBAC5B,QAAQ,EAAE,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,0CAAE,QAAQ;wBAClC,QAAQ,EAAE,MAAM,CAAC,QAAQ;qBAC1B,CAAC,CAAA;oBAEF,sBAAO,QAAQ,EAAA;;;SAChB;AApBD,CAoBC,CAAA;AAID,oCAAY","sourcesContent":["import { Router } from 'lambda-router'\r\nimport { ErrorTypesEnum } from '@/types/ErrorTypesEnum'\r\nimport { connect } from '@/lib/database'\r\nimport { APIGatewayProxyResult, Context } from 'aws-lambda'\r\nimport { auth } from './auth'\r\nimport { i18n } from './i18n'\r\n\r\nconst buildRouter = () => {\r\n  const router = Router({\r\n    parseBody: true,\r\n    decodeEvent: true,\r\n    includeErrorStack: true\r\n  })\r\n\r\n  router.unknown((_event, { response }, path, method) => {\r\n    return response(404, {\r\n      message: `${method} on ${path} not found`\r\n    })\r\n  })\r\n\r\n  router.beforeRoute(event => {\r\n    const { pathParameters = {}, queryStringParameters = {}, body } = event\r\n    event.params = pathParameters\r\n    event.query = queryStringParameters\r\n    event.body = body ?? {}\r\n  })\r\n\r\n  router.formatError((_statusCode, error) => {\r\n    if (!error.type) {\r\n      error.type = ErrorTypesEnum.UNKNOWN\r\n    }\r\n\r\n    return error\r\n  })\r\n\r\n  return router\r\n}\r\n\r\nconst connPromise = connect({ maxPoolSize: 1, minPoolSize: 0, maxIdleTimeMS: 1000 })\r\n\r\nconst buildHandler = (router, config?) =>\r\n  async (event, context: Context): Promise<APIGatewayProxyResult> => {\r\n    context = context || {}\r\n\r\n    await connPromise\r\n    context.callbackWaitsForEmptyEventLoop = false\r\n\r\n    if (config?.auth) {\r\n      router.beforeRoute(async event => {\r\n        await auth.verifyContext(event)\r\n      })\r\n    }\r\n\r\n    const result = await router.route(event, context)\r\n\r\n    const response = i18n.resolve({\r\n      language: event?.headers?.language,\r\n      response: result.response\r\n    })\r\n\r\n    return response\r\n  }\r\n\r\nexport {\r\n  buildRouter,\r\n  buildHandler\r\n}\r\n"]}]}