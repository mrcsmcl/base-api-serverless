{"remainingRequest":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js!C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\lib\\auth.ts","dependencies":[{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\lib\\auth.ts","mtime":1704481060432},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\lib\\auth.ts","sourceRoot":"","sources":["C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\lib\\auth.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2DAAyD;AACzD,iCAA+B;AAC/B,6BAA2B;AAE3B,IAAM,gBAAgB,GAAG,WAAW,CAAA;AAEpC,IAAM,gBAAgB,GAAG,UAAC,KAAK;IAC7B,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAA;IAC7C,IAAM,IAAI,GAAG,SAAG,CAAC,MAAM,CAAC,KAAK,CAAQ,CAAA;IACrC,IAAI,CAAC,IAAI,EAAE;QACT,MAAM,aAAK,CAAC,uBAAuB,EAAE,CAAA;KACtC;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,IAAM,QAAQ,GAAG,UAAO,KAAK;;;;;gBACrB,OAAO,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAA;gBAC1B,qBAAM,yBAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAA;;gBAAlD,IAAI,GAAG,SAA2C;gBAExD,sBAAO,IAAI,EAAA;;;KACZ,CAAA;AAED,IAAM,SAAS,GAAG,UAAO,KAAK;;;;;gBACtB,OAAO,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAA;gBAC1B,qBAAM,yBAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAA;;gBAAlD,IAAI,GAAG,SAA2C;gBAExD,sBAAO,IAAI,EAAA;;;KACZ,CAAA;AAED,IAAM,aAAa,GAAG,UAAO,KAAK;;;;oBACnB,qBAAM,QAAQ,CAAC,KAAK,CAAC,EAAA;;gBAA5B,IAAI,GAAG,SAAqB;gBAClC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAA;;;;KAClB,CAAA;AAED,IAAM,YAAY,GAAG,UAAC,OAAO,IAAK,OAAA,UAAO,KAAK;IAAE,cAAO;SAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;QAAP,6BAAO;;;;;;wBACxC,qBAAM,SAAS,CAAC,KAAK,CAAC,EAAA;;oBAA7B,IAAI,GAAG,SAAsB;oBACnC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAA;oBAEjB,sBAAO,OAAO,8BAAC,KAAK,UAAK,IAAI,YAAC;;;;CAC/B,EALiC,CAKjC,CAAA;AAED,IAAM,IAAI,GAAG;IACX,YAAY,cAAA;IACZ,aAAa,eAAA;IACb,gBAAgB,kBAAA;IAChB,gBAAgB,kBAAA;CACjB,CAAA;AAGC,oBAAI","sourcesContent":["import { userService } from '@/handlers/user/userService'\r\nimport { error } from './error'\r\nimport { jwt } from './jwt'\r\n\r\nconst TOKEN_HEADER_KEY = 'x-api-key'\r\n\r\nconst parseUserPayload = (event) => {\r\n  const token = event.headers[TOKEN_HEADER_KEY]\r\n  const user = jwt.verify(token) as any\r\n  if (!user) {\r\n    throw error.buildNotAuthorizedError()\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nconst authUser = async (event) => {\r\n  const payload = parseUserPayload(event)\r\n  const user = await userService.findById(payload.user_id)\r\n\r\n  return user\r\n}\r\n\r\nconst authToken = async (event) => {\r\n  const payload = parseUserPayload(event)\r\n  const user = await userService.findById(payload.user_id)\r\n\r\n  return user\r\n}\r\n\r\nconst verifyContext = async (event) => {\r\n  const user = await authUser(event)\r\n  event.user = user\r\n}\r\n\r\nconst verifyLogged = (handler) => async (event, ...rest) => {\r\n  const user = await authToken(event)\r\n  event.user = user\r\n\r\n  return handler(event, ...rest)\r\n}\r\n\r\nconst auth = {\r\n  verifyLogged,\r\n  verifyContext,\r\n  parseUserPayload,\r\n  TOKEN_HEADER_KEY\r\n}\r\n\r\nexport {\r\n  auth\r\n}\r\n"]}]}