{"remainingRequest":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js!C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\handlers\\apps\\appService.ts","dependencies":[{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\handlers\\apps\\appService.ts","mtime":1704481060442},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\node_modules\\ts-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\handlers\\apps\\appService.ts","sourceRoot":"","sources":["C:\\Users\\mrcsm\\Desktop\\base-api-serverless\\src\\handlers\\apps\\appService.ts"],"names":[],"mappings":"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","sourcesContent":["import { error } from '@/lib/error'\r\nimport { App } from '@/models/appModel'\r\nimport { IUser } from '@/types/IUser'\r\nimport { IApp } from '@/types/IApp'\r\nimport { logService } from '../log/logService'\r\nimport { appErrors } from './appErrors'\r\n\r\nconst create = async (data: IApp, user: IUser) => {\r\n  delete data.rating\r\n  delete data.totalRating\r\n\r\n  const app = await App.create(data)\r\n\r\n  await logService.create({\r\n    user: user._id,\r\n    event: 'Criar app',\r\n    detail: `App com id ${app._id} criado com sucesso!`\r\n  })\r\n\r\n  return app\r\n}\r\n\r\nconst findById = async (appId: string, user: IUser) => {\r\n  const app = await App.findById(appId)\r\n\r\n  if (!app) {\r\n    throw appErrors.buildAppNotFoundError(appId)\r\n  }\r\n\r\n  await logService.create({\r\n    user: user._id,\r\n    event: 'Obter app',\r\n    detail: `App obtido com o id ${appId}`\r\n  })\r\n\r\n  return app\r\n}\r\n\r\nconst update = async ({ _id, ...body }, user: IUser) => {\r\n  if (!_id) {\r\n    throw error.buildSchemaValidationError({\r\n      message: 'ID do app não foi informado!'\r\n    })\r\n  }\r\n\r\n  delete body.totalRating\r\n\r\n  const updatedApp = await App.findByIdAndUpdate(_id, body, { new: true })\r\n\r\n  if (!updatedApp) {\r\n    throw appErrors.buildAppNotFoundError(_id)\r\n  }\r\n\r\n  await logService.create({\r\n    user: user._id,\r\n    event: 'Alterar app',\r\n    detail: `App com id ${_id} alterado com sucesso!`\r\n  })\r\n\r\n  return updatedApp\r\n}\r\n\r\nconst list = async ({ search, page = 1, perPage = 50 }, user) => {\r\n  const maxPages = Math.min(+perPage, 50)\r\n  const skip = (+page - 1) * +perPage\r\n  const filter = {\r\n    name: new RegExp(search, 'i')\r\n  }\r\n\r\n  const apps = await App.find(filter)\r\n    .skip(skip)\r\n    .limit(maxPages)\r\n\r\n  const totalSize = await App.countDocuments(filter)\r\n\r\n  await logService.create({\r\n    user: user._id,\r\n    event: 'Listar apps',\r\n    detail: 'Foi listado os apps!'\r\n  })\r\n\r\n  return { apps, totalSize }\r\n}\r\n\r\nconst remove = async (appId: string, user: IUser) => {\r\n  const app = await App.findById(appId)\r\n\r\n  if (!app) {\r\n    throw appErrors.buildAppNotFoundError(appId)\r\n  }\r\n\r\n  const removedApp = await App.findByIdAndRemove(appId)\r\n\r\n  await logService.create({\r\n    user: user._id,\r\n    event: 'Remover app',\r\n    detail: `O app com id ${appId} foi removido com sucesso!`\r\n  })\r\n\r\n  return removedApp\r\n}\r\n\r\nconst appService = {\r\n  create,\r\n  findById,\r\n  update,\r\n  list,\r\n  remove\r\n}\r\n\r\nexport {\r\n  appService\r\n}\r\n"]}]}